
c meter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f7c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000034  00800060  00000f7c  00001010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000026  00800094  00800094  00001044  2**0
                  ALLOC
  3 .stab         000026b8  00000000  00000000  00001044  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000008cd  00000000  00000000  000036fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  00003fc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000182  00000000  00000000  00004069  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000010fc  00000000  00000000  000041eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000766  00000000  00000000  000052e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000014aa  00000000  00000000  00005a4d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001b0  00000000  00000000  00006ef8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000403  00000000  00000000  000070a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000b05  00000000  00000000  000074ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000134  00000000  00000000  00007fb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000068  00000000  00000000  000080e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	44 c1       	rjmp	.+648    	; 0x28c <__vector_1>
   4:	9d c1       	rjmp	.+826    	; 0x340 <__vector_2>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	05 c1       	rjmp	.+522    	; 0x21e <__vector_9>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ec e7       	ldi	r30, 0x7C	; 124
  3a:	ff e0       	ldi	r31, 0x0F	; 15
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a4 39       	cpi	r26, 0x94	; 148
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a4 e9       	ldi	r26, 0x94	; 148
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	aa 3b       	cpi	r26, 0xBA	; 186
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	02 d0       	rcall	.+4      	; 0x5e <main>
  5a:	8e c7       	rjmp	.+3868   	; 0xf78 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <main>:
unsigned int m;
unsigned char str[10];
unsigned char str2[10];
void lcd_float(unsigned int m);
  int main(void)
  {	 
  5e:	df 92       	push	r13
  60:	ef 92       	push	r14
  62:	ff 92       	push	r15
  64:	0f 93       	push	r16
  66:	1f 93       	push	r17
	    lcd_init(LCD_DISP_ON);	        	//initialize lcd, display on, cursor on 
  68:	8c e0       	ldi	r24, 0x0C	; 12
  6a:	9d d2       	rcall	.+1338   	; 0x5a6 <lcd_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	9f ed       	ldi	r25, 0xDF	; 223
  70:	a0 e1       	ldi	r26, 0x10	; 16
  72:	81 50       	subi	r24, 0x01	; 1
  74:	90 40       	sbci	r25, 0x00	; 0
  76:	a0 40       	sbci	r26, 0x00	; 0
  78:	e1 f7       	brne	.-8      	; 0x72 <main+0x14>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <main+0x1e>
  7c:	00 00       	nop
		_delay_ms(500);
		lcd_puts("started");
  7e:	80 e6       	ldi	r24, 0x60	; 96
  80:	90 e0       	ldi	r25, 0x00	; 0
  82:	72 d2       	rcall	.+1252   	; 0x568 <lcd_puts>
  84:	8f ef       	ldi	r24, 0xFF	; 255
  86:	9f ed       	ldi	r25, 0xDF	; 223
  88:	a0 e1       	ldi	r26, 0x10	; 16
  8a:	81 50       	subi	r24, 0x01	; 1
  8c:	90 40       	sbci	r25, 0x00	; 0
  8e:	a0 40       	sbci	r26, 0x00	; 0
  90:	e1 f7       	brne	.-8      	; 0x8a <main+0x2c>
  92:	00 c0       	rjmp	.+0      	; 0x94 <main+0x36>
  94:	00 00       	nop
	    _delay_ms(500);
		DDRD=0x60;							//int0 & int1 DDR
  96:	80 e6       	ldi	r24, 0x60	; 96
  98:	81 bb       	out	0x11, r24	; 17
		DDRB |=0x01;
  9a:	b8 9a       	sbi	0x17, 0	; 23
		PORTD &= 0b00011111;
  9c:	82 b3       	in	r24, 0x12	; 18
  9e:	8f 71       	andi	r24, 0x1F	; 31
  a0:	82 bb       	out	0x12, r24	; 18
		TIMSK=((1<<TOIE0));		//timer0 overflow enable
  a2:	81 e0       	ldi	r24, 0x01	; 1
  a4:	89 bf       	out	0x39, r24	; 57
		TCNT0=0x00;							//starts from 0
  a6:	12 be       	out	0x32, r1	; 50
		TCNT1=0x00;                        
  a8:	1d bc       	out	0x2d, r1	; 45
  aa:	1c bc       	out	0x2c, r1	; 44
		GICR=((1<<INT0)|(1<<INT1));
  ac:	80 ec       	ldi	r24, 0xC0	; 192
  ae:	8b bf       	out	0x3b, r24	; 59
		MCUCR=((1<<ISC01)|(0<<ISC00)|(1<<ISC11)|(0<<ISC10));
  b0:	8a e0       	ldi	r24, 0x0A	; 10
  b2:	85 bf       	out	0x35, r24	; 53
		PORTD |= 0b00100000;                //discharges the cap UF
  b4:	95 9a       	sbi	0x12, 5	; 18
		PORTB |= 0b00000001;                //discharges the cap NF
  b6:	c0 9a       	sbi	0x18, 0	; 24
  b8:	8f ef       	ldi	r24, 0xFF	; 255
  ba:	9f ed       	ldi	r25, 0xDF	; 223
  bc:	a0 e1       	ldi	r26, 0x10	; 16
  be:	81 50       	subi	r24, 0x01	; 1
  c0:	90 40       	sbci	r25, 0x00	; 0
  c2:	a0 40       	sbci	r26, 0x00	; 0
  c4:	e1 f7       	brne	.-8      	; 0xbe <main+0x60>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x6a>
  c8:	00 00       	nop
		_delay_ms(500);
		lcd_clrscr();
  ca:	36 d2       	rcall	.+1132   	; 0x538 <lcd_clrscr>
		sei();								//enables global interrupts					
  cc:	78 94       	sei
			{  
			_delay_ms(50);
				  if ((PIND & 0b00010000))
					{
                    PORTB &= 0b11111110;         //stops the discharge nf
					TCCR1B= ((1 << CS21)|(1 << CS20));      // Set up timer1 at 64 prescale,start timer
  ce:	0f 2e       	mov	r0, r31
  d0:	f3 e0       	ldi	r31, 0x03	; 3
  d2:	df 2e       	mov	r13, r31
  d4:	f0 2d       	mov	r31, r0
			
					
			if(!(PIND & 0b00000010))        //clear everything
			{

	              b=0;
  d6:	0f 2e       	mov	r0, r31
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	ef 2e       	mov	r14, r31
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	ff 2e       	mov	r15, r31
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	0f 2f       	mov	r16, r31
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	1f 2f       	mov	r17, r31
  e8:	f0 2d       	mov	r31, r0
       while(1)
      { 
	

		  /********************************UF PART***************************/
			if (!(PIND & 0b00000001))             //PIND.0 push button for uf
  ea:	80 99       	sbic	0x10, 0	; 16
  ec:	10 c0       	rjmp	.+32     	; 0x10e <main+0xb0>
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	9f ea       	ldi	r25, 0xAF	; 175
  f2:	a1 e0       	ldi	r26, 0x01	; 1
  f4:	81 50       	subi	r24, 0x01	; 1
  f6:	90 40       	sbci	r25, 0x00	; 0
  f8:	a0 40       	sbci	r26, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <main+0x96>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0xa0>
  fe:	00 00       	nop
			{  
			_delay_ms(50);
				  if ((PIND & 0b00000001))
 100:	80 9b       	sbis	0x10, 0	; 16
 102:	05 c0       	rjmp	.+10     	; 0x10e <main+0xb0>
					{
                    PORTD &= 0b11011111;          //stops the discharging uf
 104:	95 98       	cbi	0x12, 5	; 18
					TCCR0 |= ((1 << CS01));       // Set up timer at 8 prescale,start timer
 106:	83 b7       	in	r24, 0x33	; 51
 108:	82 60       	ori	r24, 0x02	; 2
 10a:	83 bf       	out	0x33, r24	; 51
					PORTD |= 0b01000000;          //PORTD.6 is connected to a transistor	
 10c:	96 9a       	sbi	0x12, 6	; 18
					}			
			}
			/****************************************************************/
			
			/********************************NF PART*************************/
				  if (!(PIND & 0b00010000))       //PIND.4 FOR nf
 10e:	84 99       	sbic	0x10, 4	; 16
 110:	0e c0       	rjmp	.+28     	; 0x12e <main+0xd0>
 112:	8f ef       	ldi	r24, 0xFF	; 255
 114:	9f ea       	ldi	r25, 0xAF	; 175
 116:	a1 e0       	ldi	r26, 0x01	; 1
 118:	81 50       	subi	r24, 0x01	; 1
 11a:	90 40       	sbci	r25, 0x00	; 0
 11c:	a0 40       	sbci	r26, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <main+0xba>
 120:	00 c0       	rjmp	.+0      	; 0x122 <main+0xc4>
 122:	00 00       	nop
			{  
			_delay_ms(50);
				  if ((PIND & 0b00010000))
 124:	84 9b       	sbis	0x10, 4	; 16
 126:	03 c0       	rjmp	.+6      	; 0x12e <main+0xd0>
					{
                    PORTB &= 0b11111110;         //stops the discharge nf
 128:	c0 98       	cbi	0x18, 0	; 24
					TCCR1B= ((1 << CS21)|(1 << CS20));      // Set up timer1 at 64 prescale,start timer
 12a:	de bc       	out	0x2e, r13	; 46
					//bit_set(PORTD,BIT(6));
					PORTD |= 0b10000000;        //PIND.7 is connected to a transistor	
 12c:	97 9a       	sbi	0x12, 7	; 18
			}

			/****************************************************************/	
			
					
			if(!(PIND & 0b00000010))        //clear everything
 12e:	81 99       	sbic	0x10, 1	; 16
 130:	dc cf       	rjmp	.-72     	; 0xea <main+0x8c>
			{

	              b=0;
 132:	e0 92 94 00 	sts	0x0094, r14
 136:	f0 92 95 00 	sts	0x0095, r15
 13a:	00 93 96 00 	sts	0x0096, r16
 13e:	10 93 97 00 	sts	0x0097, r17
				  x=0;			
 142:	10 92 9c 00 	sts	0x009C, r1
 146:	10 92 9d 00 	sts	0x009D, r1
 14a:	10 92 9e 00 	sts	0x009E, r1
 14e:	10 92 9f 00 	sts	0x009F, r1
				  n=0;
 152:	10 92 a1 00 	sts	0x00A1, r1
 156:	10 92 a0 00 	sts	0x00A0, r1
				  m=0;
 15a:	10 92 b9 00 	sts	0x00B9, r1
 15e:	10 92 b8 00 	sts	0x00B8, r1
				  c=0;
 162:	e0 92 98 00 	sts	0x0098, r14
 166:	f0 92 99 00 	sts	0x0099, r15
 16a:	00 93 9a 00 	sts	0x009A, r16
 16e:	10 93 9b 00 	sts	0x009B, r17
                  TCNT0=0x00;           //reset tcnt0
 172:	12 be       	out	0x32, r1	; 50
				  TCNT1=0x00;            
 174:	1d bc       	out	0x2d, r1	; 45
 176:	1c bc       	out	0x2c, r1	; 44
				  TCCR0 &= (0xf8);      //stops timer0
 178:	83 b7       	in	r24, 0x33	; 51
 17a:	88 7f       	andi	r24, 0xF8	; 248
 17c:	83 bf       	out	0x33, r24	; 51
				  TCCR1B &= (0xf8);      //stops timer1
 17e:	8e b5       	in	r24, 0x2e	; 46
 180:	88 7f       	andi	r24, 0xF8	; 248
 182:	8e bd       	out	0x2e, r24	; 46
				  lcd_clrscr();
 184:	d9 d1       	rcall	.+946    	; 0x538 <lcd_clrscr>
				  
				  PORTD &= 0b10111111;  //stops charging uf cap
 186:	96 98       	cbi	0x12, 6	; 18
				  PORTD &= 0b01111111;  //stops charging nf cap
 188:	97 98       	cbi	0x12, 7	; 18
				  PORTD |= 0b00100000;  //discharge both caps
 18a:	95 9a       	sbi	0x12, 5	; 18
				  PORTB |= 0b00000001;  //discharge both caps
 18c:	c0 9a       	sbi	0x18, 0	; 24
				  lcd_gotoxy(0,0);
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	c7 d1       	rcall	.+910    	; 0x522 <lcd_gotoxy>
 194:	aa cf       	rjmp	.-172    	; 0xea <main+0x8c>

00000196 <lcd_float>:
  }
  
  
  		 
		void lcd_float(unsigned int m)
		{
 196:	0f 93       	push	r16
 198:	1f 93       	push	r17
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	8c 01       	movw	r16, r24


			 lcd_gotoxy(0,1);
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	61 e0       	ldi	r22, 0x01	; 1
 1a4:	be d1       	rcall	.+892    	; 0x522 <lcd_gotoxy>
			 sprintf(str,"%d",m);
 1a6:	00 d0       	rcall	.+0      	; 0x1a8 <lcd_float+0x12>
 1a8:	00 d0       	rcall	.+0      	; 0x1aa <lcd_float+0x14>
 1aa:	00 d0       	rcall	.+0      	; 0x1ac <lcd_float+0x16>
 1ac:	ed b7       	in	r30, 0x3d	; 61
 1ae:	fe b7       	in	r31, 0x3e	; 62
 1b0:	31 96       	adiw	r30, 0x01	; 1
 1b2:	c4 ea       	ldi	r28, 0xA4	; 164
 1b4:	d0 e0       	ldi	r29, 0x00	; 0
 1b6:	ad b7       	in	r26, 0x3d	; 61
 1b8:	be b7       	in	r27, 0x3e	; 62
 1ba:	12 96       	adiw	r26, 0x02	; 2
 1bc:	dc 93       	st	X, r29
 1be:	ce 93       	st	-X, r28
 1c0:	11 97       	sbiw	r26, 0x01	; 1
 1c2:	88 e6       	ldi	r24, 0x68	; 104
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	93 83       	std	Z+3, r25	; 0x03
 1c8:	82 83       	std	Z+2, r24	; 0x02
 1ca:	15 83       	std	Z+5, r17	; 0x05
 1cc:	04 83       	std	Z+4, r16	; 0x04
 1ce:	05 d4       	rcall	.+2058   	; 0x9da <sprintf>
			 i=strlen(str)-1;
 1d0:	fe 01       	movw	r30, r28
 1d2:	01 90       	ld	r0, Z+
 1d4:	00 20       	and	r0, r0
 1d6:	e9 f7       	brne	.-6      	; 0x1d2 <lcd_float+0x3c>
 1d8:	31 97       	sbiw	r30, 0x01	; 1
 1da:	ec 1b       	sub	r30, r28
 1dc:	fd 0b       	sbc	r31, r29
 1de:	df 01       	movw	r26, r30
 1e0:	11 97       	sbiw	r26, 0x01	; 1
 1e2:	b0 93 a3 00 	sts	0x00A3, r27
 1e6:	a0 93 a2 00 	sts	0x00A2, r26
			 str[i+1]=str[i];  
 1ea:	ec 0f       	add	r30, r28
 1ec:	fd 1f       	adc	r31, r29
 1ee:	ac 0f       	add	r26, r28
 1f0:	bd 1f       	adc	r27, r29
 1f2:	8c 91       	ld	r24, X
 1f4:	80 83       	st	Z, r24
			 str[i]='.';
 1f6:	8e e2       	ldi	r24, 0x2E	; 46
 1f8:	8c 93       	st	X, r24
			lcd_puts(str);
 1fa:	8d b7       	in	r24, 0x3d	; 61
 1fc:	9e b7       	in	r25, 0x3e	; 62
 1fe:	06 96       	adiw	r24, 0x06	; 6
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	f8 94       	cli
 204:	9e bf       	out	0x3e, r25	; 62
 206:	0f be       	out	0x3f, r0	; 63
 208:	8d bf       	out	0x3d, r24	; 61
 20a:	ce 01       	movw	r24, r28
 20c:	ad d1       	rcall	.+858    	; 0x568 <lcd_puts>
			lcd_puts("uf");
 20e:	8b e6       	ldi	r24, 0x6B	; 107
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	aa d1       	rcall	.+852    	; 0x568 <lcd_puts>
		

			}			
 214:	df 91       	pop	r29
 216:	cf 91       	pop	r28
 218:	1f 91       	pop	r17
 21a:	0f 91       	pop	r16
 21c:	08 95       	ret

0000021e <__vector_9>:
  
  
  
  		ISR(TIMER0_OVF_vect)
	     {
 21e:	1f 92       	push	r1
 220:	0f 92       	push	r0
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	0f 92       	push	r0
 226:	11 24       	eor	r1, r1
 228:	2f 93       	push	r18
 22a:	3f 93       	push	r19
 22c:	4f 93       	push	r20
 22e:	5f 93       	push	r21
 230:	6f 93       	push	r22
 232:	7f 93       	push	r23
 234:	8f 93       	push	r24
 236:	9f 93       	push	r25
 238:	af 93       	push	r26
 23a:	bf 93       	push	r27
 23c:	ef 93       	push	r30
 23e:	ff 93       	push	r31

	      	b=b+1;
 240:	60 91 94 00 	lds	r22, 0x0094
 244:	70 91 95 00 	lds	r23, 0x0095
 248:	80 91 96 00 	lds	r24, 0x0096
 24c:	90 91 97 00 	lds	r25, 0x0097
 250:	20 e0       	ldi	r18, 0x00	; 0
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	40 e8       	ldi	r20, 0x80	; 128
 256:	5f e3       	ldi	r21, 0x3F	; 63
 258:	d7 d1       	rcall	.+942    	; 0x608 <__addsf3>
 25a:	60 93 94 00 	sts	0x0094, r22
 25e:	70 93 95 00 	sts	0x0095, r23
 262:	80 93 96 00 	sts	0x0096, r24
 266:	90 93 97 00 	sts	0x0097, r25
	       
	  
         }
 26a:	ff 91       	pop	r31
 26c:	ef 91       	pop	r30
 26e:	bf 91       	pop	r27
 270:	af 91       	pop	r26
 272:	9f 91       	pop	r25
 274:	8f 91       	pop	r24
 276:	7f 91       	pop	r23
 278:	6f 91       	pop	r22
 27a:	5f 91       	pop	r21
 27c:	4f 91       	pop	r20
 27e:	3f 91       	pop	r19
 280:	2f 91       	pop	r18
 282:	0f 90       	pop	r0
 284:	0f be       	out	0x3f, r0	; 63
 286:	0f 90       	pop	r0
 288:	1f 90       	pop	r1
 28a:	18 95       	reti

0000028c <__vector_1>:
		 
		 ISR(INT0_vect)
         {   
 28c:	1f 92       	push	r1
 28e:	0f 92       	push	r0
 290:	0f b6       	in	r0, 0x3f	; 63
 292:	0f 92       	push	r0
 294:	11 24       	eor	r1, r1
 296:	2f 93       	push	r18
 298:	3f 93       	push	r19
 29a:	4f 93       	push	r20
 29c:	5f 93       	push	r21
 29e:	6f 93       	push	r22
 2a0:	7f 93       	push	r23
 2a2:	8f 93       	push	r24
 2a4:	9f 93       	push	r25
 2a6:	af 93       	push	r26
 2a8:	bf 93       	push	r27
 2aa:	ef 93       	push	r30
 2ac:	ff 93       	push	r31
			 TCCR0 &= (0xf8);    //stop timer0
 2ae:	83 b7       	in	r24, 0x33	; 51
 2b0:	88 7f       	andi	r24, 0xF8	; 248
 2b2:	83 bf       	out	0x33, r24	; 51
			 b/=7;
 2b4:	60 91 94 00 	lds	r22, 0x0094
 2b8:	70 91 95 00 	lds	r23, 0x0095
 2bc:	80 91 96 00 	lds	r24, 0x0096
 2c0:	90 91 97 00 	lds	r25, 0x0097
 2c4:	20 e0       	ldi	r18, 0x00	; 0
 2c6:	30 e0       	ldi	r19, 0x00	; 0
 2c8:	40 ee       	ldi	r20, 0xE0	; 224
 2ca:	50 e4       	ldi	r21, 0x40	; 64
 2cc:	01 d2       	rcall	.+1026   	; 0x6d0 <__divsf3>
			 b=b/10;
 2ce:	20 e0       	ldi	r18, 0x00	; 0
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	40 e2       	ldi	r20, 0x20	; 32
 2d4:	51 e4       	ldi	r21, 0x41	; 65
 2d6:	fc d1       	rcall	.+1016   	; 0x6d0 <__divsf3>
 2d8:	26 2f       	mov	r18, r22
 2da:	37 2f       	mov	r19, r23
 2dc:	48 2f       	mov	r20, r24
 2de:	59 2f       	mov	r21, r25
 2e0:	20 93 94 00 	sts	0x0094, r18
 2e4:	30 93 95 00 	sts	0x0095, r19
 2e8:	40 93 96 00 	sts	0x0096, r20
 2ec:	50 93 97 00 	sts	0x0097, r21
			 n=b*100;
 2f0:	20 e0       	ldi	r18, 0x00	; 0
 2f2:	30 e0       	ldi	r19, 0x00	; 0
 2f4:	48 ec       	ldi	r20, 0xC8	; 200
 2f6:	52 e4       	ldi	r21, 0x42	; 66
 2f8:	0d d3       	rcall	.+1562   	; 0x914 <__mulsf3>
 2fa:	52 d2       	rcall	.+1188   	; 0x7a0 <__fixunssfsi>
 2fc:	9b 01       	movw	r18, r22
 2fe:	70 93 a1 00 	sts	0x00A1, r23
 302:	60 93 a0 00 	sts	0x00A0, r22
            
				if((n<10)||(n>5000))
 306:	cb 01       	movw	r24, r22
 308:	0a 97       	sbiw	r24, 0x0a	; 10
 30a:	43 e1       	ldi	r20, 0x13	; 19
 30c:	8f 37       	cpi	r24, 0x7F	; 127
 30e:	94 07       	cpc	r25, r20
 310:	20 f0       	brcs	.+8      	; 0x31a <__vector_1+0x8e>
				{
				  lcd_puts("out of uf range ");
 312:	8e e6       	ldi	r24, 0x6E	; 110
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	28 d1       	rcall	.+592    	; 0x568 <lcd_puts>
 318:	02 c0       	rjmp	.+4      	; 0x31e <__vector_1+0x92>
			
				}
				else
				{	
                 lcd_float(n);
 31a:	c9 01       	movw	r24, r18
 31c:	3c df       	rcall	.-392    	; 0x196 <lcd_float>
				}				
		
		 }
 31e:	ff 91       	pop	r31
 320:	ef 91       	pop	r30
 322:	bf 91       	pop	r27
 324:	af 91       	pop	r26
 326:	9f 91       	pop	r25
 328:	8f 91       	pop	r24
 32a:	7f 91       	pop	r23
 32c:	6f 91       	pop	r22
 32e:	5f 91       	pop	r21
 330:	4f 91       	pop	r20
 332:	3f 91       	pop	r19
 334:	2f 91       	pop	r18
 336:	0f 90       	pop	r0
 338:	0f be       	out	0x3f, r0	; 63
 33a:	0f 90       	pop	r0
 33c:	1f 90       	pop	r1
 33e:	18 95       	reti

00000340 <__vector_2>:
		 
		 
		
		 ISR(INT1_vect)
		 {
 340:	1f 92       	push	r1
 342:	0f 92       	push	r0
 344:	0f b6       	in	r0, 0x3f	; 63
 346:	0f 92       	push	r0
 348:	11 24       	eor	r1, r1
 34a:	2f 93       	push	r18
 34c:	3f 93       	push	r19
 34e:	4f 93       	push	r20
 350:	5f 93       	push	r21
 352:	6f 93       	push	r22
 354:	7f 93       	push	r23
 356:	8f 93       	push	r24
 358:	9f 93       	push	r25
 35a:	af 93       	push	r26
 35c:	bf 93       	push	r27
 35e:	cf 93       	push	r28
 360:	df 93       	push	r29
 362:	ef 93       	push	r30
 364:	ff 93       	push	r31
			TCCR1B &= (0xf8);    //stop timer1
 366:	8e b5       	in	r24, 0x2e	; 46
 368:	88 7f       	andi	r24, 0xF8	; 248
 36a:	8e bd       	out	0x2e, r24	; 46
			
            x=TCNT1;
 36c:	6c b5       	in	r22, 0x2c	; 44
 36e:	7d b5       	in	r23, 0x2d	; 45
 370:	80 e0       	ldi	r24, 0x00	; 0
 372:	90 e0       	ldi	r25, 0x00	; 0
			x=x/116.09;
 374:	41 d2       	rcall	.+1154   	; 0x7f8 <__floatunsisf>
 376:	24 e1       	ldi	r18, 0x14	; 20
 378:	3e e2       	ldi	r19, 0x2E	; 46
 37a:	48 ee       	ldi	r20, 0xE8	; 232
 37c:	52 e4       	ldi	r21, 0x42	; 66
 37e:	a8 d1       	rcall	.+848    	; 0x6d0 <__divsf3>
 380:	0f d2       	rcall	.+1054   	; 0x7a0 <__fixunssfsi>
 382:	60 93 9c 00 	sts	0x009C, r22
 386:	70 93 9d 00 	sts	0x009D, r23
 38a:	80 93 9e 00 	sts	0x009E, r24
 38e:	90 93 9f 00 	sts	0x009F, r25
				if((x<1)||(x>600))
 392:	9b 01       	movw	r18, r22
 394:	ac 01       	movw	r20, r24
 396:	21 50       	subi	r18, 0x01	; 1
 398:	30 40       	sbci	r19, 0x00	; 0
 39a:	40 40       	sbci	r20, 0x00	; 0
 39c:	50 40       	sbci	r21, 0x00	; 0
 39e:	28 35       	cpi	r18, 0x58	; 88
 3a0:	a2 e0       	ldi	r26, 0x02	; 2
 3a2:	3a 07       	cpc	r19, r26
 3a4:	a0 e0       	ldi	r26, 0x00	; 0
 3a6:	4a 07       	cpc	r20, r26
 3a8:	a0 e0       	ldi	r26, 0x00	; 0
 3aa:	5a 07       	cpc	r21, r26
 3ac:	20 f0       	brcs	.+8      	; 0x3b6 <__vector_2+0x76>
				{
				lcd_puts("out of nf range ");
 3ae:	8f e7       	ldi	r24, 0x7F	; 127
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	da d0       	rcall	.+436    	; 0x568 <lcd_puts>
 3b4:	2b c0       	rjmp	.+86     	; 0x40c <__vector_2+0xcc>
			
				}
				else
				{
                sprintf(str2,"%d",x);
 3b6:	2d b7       	in	r18, 0x3d	; 61
 3b8:	3e b7       	in	r19, 0x3e	; 62
 3ba:	28 50       	subi	r18, 0x08	; 8
 3bc:	30 40       	sbci	r19, 0x00	; 0
 3be:	0f b6       	in	r0, 0x3f	; 63
 3c0:	f8 94       	cli
 3c2:	3e bf       	out	0x3e, r19	; 62
 3c4:	0f be       	out	0x3f, r0	; 63
 3c6:	2d bf       	out	0x3d, r18	; 61
 3c8:	ed b7       	in	r30, 0x3d	; 61
 3ca:	fe b7       	in	r31, 0x3e	; 62
 3cc:	31 96       	adiw	r30, 0x01	; 1
 3ce:	ce ea       	ldi	r28, 0xAE	; 174
 3d0:	d0 e0       	ldi	r29, 0x00	; 0
 3d2:	ad b7       	in	r26, 0x3d	; 61
 3d4:	be b7       	in	r27, 0x3e	; 62
 3d6:	12 96       	adiw	r26, 0x02	; 2
 3d8:	dc 93       	st	X, r29
 3da:	ce 93       	st	-X, r28
 3dc:	11 97       	sbiw	r26, 0x01	; 1
 3de:	28 e6       	ldi	r18, 0x68	; 104
 3e0:	30 e0       	ldi	r19, 0x00	; 0
 3e2:	33 83       	std	Z+3, r19	; 0x03
 3e4:	22 83       	std	Z+2, r18	; 0x02
 3e6:	64 83       	std	Z+4, r22	; 0x04
 3e8:	75 83       	std	Z+5, r23	; 0x05
 3ea:	86 83       	std	Z+6, r24	; 0x06
 3ec:	97 83       	std	Z+7, r25	; 0x07
 3ee:	f5 d2       	rcall	.+1514   	; 0x9da <sprintf>
				lcd_puts(str2);	
 3f0:	2d b7       	in	r18, 0x3d	; 61
 3f2:	3e b7       	in	r19, 0x3e	; 62
 3f4:	28 5f       	subi	r18, 0xF8	; 248
 3f6:	3f 4f       	sbci	r19, 0xFF	; 255
 3f8:	0f b6       	in	r0, 0x3f	; 63
 3fa:	f8 94       	cli
 3fc:	3e bf       	out	0x3e, r19	; 62
 3fe:	0f be       	out	0x3f, r0	; 63
 400:	2d bf       	out	0x3d, r18	; 61
 402:	ce 01       	movw	r24, r28
 404:	b1 d0       	rcall	.+354    	; 0x568 <lcd_puts>
				lcd_puts("nf");
 406:	80 e9       	ldi	r24, 0x90	; 144
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	ae d0       	rcall	.+348    	; 0x568 <lcd_puts>
				}				
			
			
			
 40c:	ff 91       	pop	r31
 40e:	ef 91       	pop	r30
 410:	df 91       	pop	r29
 412:	cf 91       	pop	r28
 414:	bf 91       	pop	r27
 416:	af 91       	pop	r26
 418:	9f 91       	pop	r25
 41a:	8f 91       	pop	r24
 41c:	7f 91       	pop	r23
 41e:	6f 91       	pop	r22
 420:	5f 91       	pop	r21
 422:	4f 91       	pop	r20
 424:	3f 91       	pop	r19
 426:	2f 91       	pop	r18
 428:	0f 90       	pop	r0
 42a:	0f be       	out	0x3f, r0	; 63
 42c:	0f 90       	pop	r0
 42e:	1f 90       	pop	r1
 430:	18 95       	reti

00000432 <toggle_e>:

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
 432:	aa 9a       	sbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 434:	84 e0       	ldi	r24, 0x04	; 4
 436:	8a 95       	dec	r24
 438:	f1 f7       	brne	.-4      	; 0x436 <toggle_e+0x4>
    lcd_e_delay();
    lcd_e_low();
 43a:	aa 98       	cbi	0x15, 2	; 21
}
 43c:	08 95       	ret

0000043e <lcd_write>:
                 0: write instruction
Returns:  none
*************************************************************************/
#if LCD_IO_MODE
static void lcd_write(uint8_t data,uint8_t rs) 
{
 43e:	1f 93       	push	r17
    unsigned char dataBits ;


    if (rs) {        /* write data        (RS=1, RW=0) */
 440:	66 23       	and	r22, r22
 442:	11 f0       	breq	.+4      	; 0x448 <lcd_write+0xa>
       lcd_rs_high();
 444:	a8 9a       	sbi	0x15, 0	; 21
 446:	01 c0       	rjmp	.+2      	; 0x44a <lcd_write+0xc>
    } else {         /* write instruction (RS=0, RW=0) */
       lcd_rs_low();
 448:	a8 98       	cbi	0x15, 0	; 21
    }
    lcd_rw_low();    /* RW=0  write mode      */
 44a:	a9 98       	cbi	0x15, 1	; 21
        LCD_DATA0_PORT = dataBits | 0x0F;
    }
    else
    {
        /* configure data pins as output */
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
 44c:	b9 9a       	sbi	0x17, 1	; 23
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
 44e:	ba 9a       	sbi	0x17, 2	; 23
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
 450:	bb 9a       	sbi	0x17, 3	; 23
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
 452:	bc 9a       	sbi	0x17, 4	; 23
        
        /* output high nibble first */
        LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
 454:	c4 98       	cbi	0x18, 4	; 24
        LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
 456:	c3 98       	cbi	0x18, 3	; 24
        LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
 458:	c2 98       	cbi	0x18, 2	; 24
        LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
 45a:	c1 98       	cbi	0x18, 1	; 24
    	if(data & 0x80) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
 45c:	88 23       	and	r24, r24
 45e:	0c f4       	brge	.+2      	; 0x462 <__stack+0x3>
 460:	c4 9a       	sbi	0x18, 4	; 24
    	if(data & 0x40) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
 462:	18 2f       	mov	r17, r24
 464:	86 fd       	sbrc	r24, 6
 466:	c3 9a       	sbi	0x18, 3	; 24
    	if(data & 0x20) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
 468:	15 fd       	sbrc	r17, 5
 46a:	c2 9a       	sbi	0x18, 2	; 24
    	if(data & 0x10) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);   
 46c:	14 fd       	sbrc	r17, 4
 46e:	c1 9a       	sbi	0x18, 1	; 24
        lcd_e_toggle();
 470:	e0 df       	rcall	.-64     	; 0x432 <toggle_e>
        
        /* output low nibble */
        LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
 472:	c4 98       	cbi	0x18, 4	; 24
        LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
 474:	c3 98       	cbi	0x18, 3	; 24
        LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
 476:	c2 98       	cbi	0x18, 2	; 24
        LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
 478:	c1 98       	cbi	0x18, 1	; 24
    	if(data & 0x08) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
 47a:	13 fd       	sbrc	r17, 3
 47c:	c4 9a       	sbi	0x18, 4	; 24
    	if(data & 0x04) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
 47e:	12 fd       	sbrc	r17, 2
 480:	c3 9a       	sbi	0x18, 3	; 24
    	if(data & 0x02) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
 482:	11 fd       	sbrc	r17, 1
 484:	c2 9a       	sbi	0x18, 2	; 24
    	if(data & 0x01) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
 486:	10 fd       	sbrc	r17, 0
 488:	c1 9a       	sbi	0x18, 1	; 24
        lcd_e_toggle();        
 48a:	d3 df       	rcall	.-90     	; 0x432 <toggle_e>
        
        /* all data pins high (inactive) */
        LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
 48c:	c1 9a       	sbi	0x18, 1	; 24
        LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
 48e:	c2 9a       	sbi	0x18, 2	; 24
        LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
 490:	c3 9a       	sbi	0x18, 3	; 24
        LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
 492:	c4 9a       	sbi	0x18, 4	; 24
    }
}
 494:	1f 91       	pop	r17
 496:	08 95       	ret

00000498 <lcd_read>:
static uint8_t lcd_read(uint8_t rs) 
{
    uint8_t data;
    
    
    if (rs)
 498:	88 23       	and	r24, r24
 49a:	11 f0       	breq	.+4      	; 0x4a0 <lcd_read+0x8>
        lcd_rs_high();                       /* RS=1: read data      */
 49c:	a8 9a       	sbi	0x15, 0	; 21
 49e:	01 c0       	rjmp	.+2      	; 0x4a2 <lcd_read+0xa>
    else
        lcd_rs_low();                        /* RS=0: read busy flag */
 4a0:	a8 98       	cbi	0x15, 0	; 21
    lcd_rw_high();                           /* RW=1  read mode      */
 4a2:	a9 9a       	sbi	0x15, 1	; 21
        lcd_e_low();
    }
    else
    {
        /* configure data pins as input */
        DDR(LCD_DATA0_PORT) &= ~_BV(LCD_DATA0_PIN);
 4a4:	b9 98       	cbi	0x17, 1	; 23
        DDR(LCD_DATA1_PORT) &= ~_BV(LCD_DATA1_PIN);
 4a6:	ba 98       	cbi	0x17, 2	; 23
        DDR(LCD_DATA2_PORT) &= ~_BV(LCD_DATA2_PIN);
 4a8:	bb 98       	cbi	0x17, 3	; 23
        DDR(LCD_DATA3_PORT) &= ~_BV(LCD_DATA3_PIN);
 4aa:	bc 98       	cbi	0x17, 4	; 23
                
        /* read high nibble first */
        lcd_e_high();
 4ac:	aa 9a       	sbi	0x15, 2	; 21
 4ae:	84 e0       	ldi	r24, 0x04	; 4
 4b0:	8a 95       	dec	r24
 4b2:	f1 f7       	brne	.-4      	; 0x4b0 <lcd_read+0x18>
        lcd_e_delay();        
        data = 0;
        if ( PIN(LCD_DATA0_PORT) & _BV(LCD_DATA0_PIN) ) data |= 0x10;
 4b4:	b1 99       	sbic	0x16, 1	; 22
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <lcd_read+0x24>
        DDR(LCD_DATA3_PORT) &= ~_BV(LCD_DATA3_PIN);
                
        /* read high nibble first */
        lcd_e_high();
        lcd_e_delay();        
        data = 0;
 4b8:	80 e0       	ldi	r24, 0x00	; 0
 4ba:	01 c0       	rjmp	.+2      	; 0x4be <lcd_read+0x26>
        if ( PIN(LCD_DATA0_PORT) & _BV(LCD_DATA0_PIN) ) data |= 0x10;
 4bc:	80 e1       	ldi	r24, 0x10	; 16
        if ( PIN(LCD_DATA1_PORT) & _BV(LCD_DATA1_PIN) ) data |= 0x20;
 4be:	b2 99       	sbic	0x16, 2	; 22
 4c0:	80 62       	ori	r24, 0x20	; 32
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x40;
 4c2:	b3 99       	sbic	0x16, 3	; 22
 4c4:	80 64       	ori	r24, 0x40	; 64
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x80;
 4c6:	b4 99       	sbic	0x16, 4	; 22
 4c8:	80 68       	ori	r24, 0x80	; 128
        lcd_e_low();
 4ca:	aa 98       	cbi	0x15, 2	; 21
 4cc:	94 e0       	ldi	r25, 0x04	; 4
 4ce:	9a 95       	dec	r25
 4d0:	f1 f7       	brne	.-4      	; 0x4ce <lcd_read+0x36>

        lcd_e_delay();                       /* Enable 500ns low       */
    
        /* read low nibble */    
        lcd_e_high();
 4d2:	aa 9a       	sbi	0x15, 2	; 21
 4d4:	94 e0       	ldi	r25, 0x04	; 4
 4d6:	9a 95       	dec	r25
 4d8:	f1 f7       	brne	.-4      	; 0x4d6 <lcd_read+0x3e>
        lcd_e_delay();
        if ( PIN(LCD_DATA0_PORT) & _BV(LCD_DATA0_PIN) ) data |= 0x01;
 4da:	b1 99       	sbic	0x16, 1	; 22
 4dc:	81 60       	ori	r24, 0x01	; 1
        if ( PIN(LCD_DATA1_PORT) & _BV(LCD_DATA1_PIN) ) data |= 0x02;
 4de:	b2 99       	sbic	0x16, 2	; 22
 4e0:	82 60       	ori	r24, 0x02	; 2
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x04;
 4e2:	b3 99       	sbic	0x16, 3	; 22
 4e4:	84 60       	ori	r24, 0x04	; 4
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x08;        
 4e6:	b4 99       	sbic	0x16, 4	; 22
 4e8:	88 60       	ori	r24, 0x08	; 8
        lcd_e_low();
 4ea:	aa 98       	cbi	0x15, 2	; 21
    }
    return data;
}
 4ec:	08 95       	ret

000004ee <lcd_waitbusy>:

{
    register uint8_t c;
    
    /* wait until busy flag is cleared */
    while ( (c=lcd_read(0)) & (1<<LCD_BUSY)) {}
 4ee:	80 e0       	ldi	r24, 0x00	; 0
 4f0:	d3 df       	rcall	.-90     	; 0x498 <lcd_read>
 4f2:	88 23       	and	r24, r24
 4f4:	e4 f3       	brlt	.-8      	; 0x4ee <lcd_waitbusy>
 4f6:	8f e0       	ldi	r24, 0x0F	; 15
 4f8:	8a 95       	dec	r24
 4fa:	f1 f7       	brne	.-4      	; 0x4f8 <lcd_waitbusy+0xa>
    
    /* the address counter is updated 4us after the busy flag is cleared */
    delay(LCD_DELAY_BUSY_FLAG);

    /* now read the address counter */
    return (lcd_read(0));  // return address counter
 4fc:	80 e0       	ldi	r24, 0x00	; 0
 4fe:	cc df       	rcall	.-104    	; 0x498 <lcd_read>
    
}/* lcd_waitbusy */
 500:	08 95       	ret

00000502 <lcd_command>:
Send LCD controller instruction command
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
 502:	1f 93       	push	r17
 504:	18 2f       	mov	r17, r24
    lcd_waitbusy();
 506:	f3 df       	rcall	.-26     	; 0x4ee <lcd_waitbusy>
    lcd_write(cmd,0);
 508:	81 2f       	mov	r24, r17
 50a:	60 e0       	ldi	r22, 0x00	; 0
 50c:	98 df       	rcall	.-208    	; 0x43e <lcd_write>
}
 50e:	1f 91       	pop	r17
 510:	08 95       	ret

00000512 <lcd_data>:
Send data byte to LCD controller 
Input:   data to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_data(uint8_t data)
{
 512:	1f 93       	push	r17
 514:	18 2f       	mov	r17, r24
    lcd_waitbusy();
 516:	eb df       	rcall	.-42     	; 0x4ee <lcd_waitbusy>
    lcd_write(data,1);
 518:	81 2f       	mov	r24, r17
 51a:	61 e0       	ldi	r22, 0x01	; 1
 51c:	90 df       	rcall	.-224    	; 0x43e <lcd_write>
}
 51e:	1f 91       	pop	r17
 520:	08 95       	ret

00000522 <lcd_gotoxy>:
{
#if LCD_LINES==1
    lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
#endif
#if LCD_LINES==2
    if ( y==0 ) 
 522:	66 23       	and	r22, r22
 524:	19 f4       	brne	.+6      	; 0x52c <lcd_gotoxy+0xa>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
 526:	80 58       	subi	r24, 0x80	; 128
 528:	ec df       	rcall	.-40     	; 0x502 <lcd_command>
 52a:	08 95       	ret
    else
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
 52c:	80 54       	subi	r24, 0x40	; 64
 52e:	e9 df       	rcall	.-46     	; 0x502 <lcd_command>
 530:	08 95       	ret

00000532 <lcd_getxy>:

/*************************************************************************
*************************************************************************/
int lcd_getxy(void)
{
    return lcd_waitbusy();
 532:	dd df       	rcall	.-70     	; 0x4ee <lcd_waitbusy>
}
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	08 95       	ret

00000538 <lcd_clrscr>:
/*************************************************************************
Clear display and set cursor to home position
*************************************************************************/
void lcd_clrscr(void)
{
    lcd_command(1<<LCD_CLR);
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	e3 df       	rcall	.-58     	; 0x502 <lcd_command>
}
 53c:	08 95       	ret

0000053e <lcd_home>:
/*************************************************************************
Set cursor to home position
*************************************************************************/
void lcd_home(void)
{
    lcd_command(1<<LCD_HOME);
 53e:	82 e0       	ldi	r24, 0x02	; 2
 540:	e0 df       	rcall	.-64     	; 0x502 <lcd_command>
}
 542:	08 95       	ret

00000544 <lcd_putc>:
Display character at current cursor position 
Input:    character to be displayed                                       
Returns:  none
*************************************************************************/
void lcd_putc(char c)
{
 544:	1f 93       	push	r17
 546:	18 2f       	mov	r17, r24
    uint8_t pos;


    pos = lcd_waitbusy();   // read busy-flag and address counter
 548:	d2 df       	rcall	.-92     	; 0x4ee <lcd_waitbusy>
    if (c=='\n')
 54a:	1a 30       	cpi	r17, 0x0A	; 10
 54c:	41 f4       	brne	.+16     	; 0x55e <lcd_putc+0x1a>

#if LCD_LINES==1
    addressCounter = 0;
#endif
#if LCD_LINES==2
    if ( pos < (LCD_START_LINE2) )
 54e:	80 34       	cpi	r24, 0x40	; 64
 550:	10 f4       	brcc	.+4      	; 0x556 <lcd_putc+0x12>
        addressCounter = LCD_START_LINE2;
 552:	80 e4       	ldi	r24, 0x40	; 64
 554:	01 c0       	rjmp	.+2      	; 0x558 <lcd_putc+0x14>
    else
        addressCounter = LCD_START_LINE1;
 556:	80 e0       	ldi	r24, 0x00	; 0
        addressCounter = LCD_START_LINE4;
    else 
        addressCounter = LCD_START_LINE1;
#endif
#endif
    lcd_command((1<<LCD_DDRAM)+addressCounter);
 558:	80 58       	subi	r24, 0x80	; 128
 55a:	d3 df       	rcall	.-90     	; 0x502 <lcd_command>
 55c:	03 c0       	rjmp	.+6      	; 0x564 <lcd_putc+0x20>
            lcd_write((1<<LCD_DDRAM)+LCD_START_LINE1,0);
        }
#endif
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
 55e:	81 2f       	mov	r24, r17
 560:	61 e0       	ldi	r22, 0x01	; 1
 562:	6d df       	rcall	.-294    	; 0x43e <lcd_write>
    }

}/* lcd_putc */
 564:	1f 91       	pop	r17
 566:	08 95       	ret

00000568 <lcd_puts>:
Input:    string to be displayed
Returns:  none
*************************************************************************/
void lcd_puts(const char *s)
/* print string on lcd (no auto linefeed) */
{
 568:	cf 93       	push	r28
 56a:	df 93       	push	r29
 56c:	ec 01       	movw	r28, r24
    register char c;

    while ( (c = *s++) ) {
 56e:	88 81       	ld	r24, Y
 570:	88 23       	and	r24, r24
 572:	29 f0       	breq	.+10     	; 0x57e <lcd_puts+0x16>
 574:	21 96       	adiw	r28, 0x01	; 1
        lcd_putc(c);
 576:	e6 df       	rcall	.-52     	; 0x544 <lcd_putc>
void lcd_puts(const char *s)
/* print string on lcd (no auto linefeed) */
{
    register char c;

    while ( (c = *s++) ) {
 578:	89 91       	ld	r24, Y+
 57a:	88 23       	and	r24, r24
 57c:	e1 f7       	brne	.-8      	; 0x576 <lcd_puts+0xe>
        lcd_putc(c);
    }

}/* lcd_puts */
 57e:	df 91       	pop	r29
 580:	cf 91       	pop	r28
 582:	08 95       	ret

00000584 <lcd_puts_p>:
Input:     string from program memory be be displayed                                        
Returns:   none
*************************************************************************/
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
 584:	cf 93       	push	r28
 586:	df 93       	push	r29
 588:	ec 01       	movw	r28, r24
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
 58a:	fc 01       	movw	r30, r24
 58c:	84 91       	lpm	r24, Z+
 58e:	88 23       	and	r24, r24
 590:	39 f0       	breq	.+14     	; 0x5a0 <lcd_puts_p+0x1c>
 592:	21 96       	adiw	r28, 0x01	; 1
        lcd_putc(c);
 594:	d7 df       	rcall	.-82     	; 0x544 <lcd_putc>
 596:	fe 01       	movw	r30, r28
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
 598:	21 96       	adiw	r28, 0x01	; 1
 59a:	84 91       	lpm	r24, Z+
 59c:	88 23       	and	r24, r24
 59e:	d1 f7       	brne	.-12     	; 0x594 <lcd_puts_p+0x10>
        lcd_putc(c);
    }

}/* lcd_puts_p */
 5a0:	df 91       	pop	r29
 5a2:	cf 91       	pop	r28
 5a4:	08 95       	ret

000005a6 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 5a6:	1f 93       	push	r17
 5a8:	18 2f       	mov	r17, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
 5aa:	a0 9a       	sbi	0x14, 0	; 20
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
 5ac:	a1 9a       	sbi	0x14, 1	; 20
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
 5ae:	a2 9a       	sbi	0x14, 2	; 20
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
 5b0:	b9 9a       	sbi	0x17, 1	; 23
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
 5b2:	ba 9a       	sbi	0x17, 2	; 23
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
 5b4:	bb 9a       	sbi	0x17, 3	; 23
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
 5b6:	bc 9a       	sbi	0x17, 4	; 23
 5b8:	8c ec       	ldi	r24, 0xCC	; 204
 5ba:	9c ea       	ldi	r25, 0xAC	; 172
 5bc:	01 97       	sbiw	r24, 0x01	; 1
 5be:	f1 f7       	brne	.-4      	; 0x5bc <lcd_init+0x16>
 5c0:	00 c0       	rjmp	.+0      	; 0x5c2 <lcd_init+0x1c>
 5c2:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
 5c4:	c2 9a       	sbi	0x18, 2	; 24
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
 5c6:	c1 9a       	sbi	0x18, 1	; 24
    lcd_e_toggle();
 5c8:	34 df       	rcall	.-408    	; 0x432 <toggle_e>
 5ca:	8f ef       	ldi	r24, 0xFF	; 255
 5cc:	95 e3       	ldi	r25, 0x35	; 53
 5ce:	01 97       	sbiw	r24, 0x01	; 1
 5d0:	f1 f7       	brne	.-4      	; 0x5ce <lcd_init+0x28>
 5d2:	00 c0       	rjmp	.+0      	; 0x5d4 <lcd_init+0x2e>
 5d4:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 5d6:	2d df       	rcall	.-422    	; 0x432 <toggle_e>
 5d8:	9c ee       	ldi	r25, 0xEC	; 236
 5da:	9a 95       	dec	r25
 5dc:	f1 f7       	brne	.-4      	; 0x5da <lcd_init+0x34>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 5de:	29 df       	rcall	.-430    	; 0x432 <toggle_e>
 5e0:	8c ee       	ldi	r24, 0xEC	; 236
 5e2:	8a 95       	dec	r24
 5e4:	f1 f7       	brne	.-4      	; 0x5e2 <lcd_init+0x3c>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 5e6:	c1 98       	cbi	0x18, 1	; 24
    lcd_e_toggle();
 5e8:	24 df       	rcall	.-440    	; 0x432 <toggle_e>
 5ea:	9c ee       	ldi	r25, 0xEC	; 236
 5ec:	9a 95       	dec	r25
 5ee:	f1 f7       	brne	.-4      	; 0x5ec <lcd_init+0x46>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 5f0:	88 e2       	ldi	r24, 0x28	; 40
 5f2:	87 df       	rcall	.-242    	; 0x502 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 5f4:	88 e0       	ldi	r24, 0x08	; 8
 5f6:	85 df       	rcall	.-246    	; 0x502 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 5f8:	9f df       	rcall	.-194    	; 0x538 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 5fa:	86 e0       	ldi	r24, 0x06	; 6
 5fc:	82 df       	rcall	.-252    	; 0x502 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 5fe:	81 2f       	mov	r24, r17
 600:	80 df       	rcall	.-256    	; 0x502 <lcd_command>

}/* lcd_init */
 602:	1f 91       	pop	r17
 604:	08 95       	ret

00000606 <__subsf3>:
 606:	50 58       	subi	r21, 0x80	; 128

00000608 <__addsf3>:
 608:	bb 27       	eor	r27, r27
 60a:	aa 27       	eor	r26, r26
 60c:	0e d0       	rcall	.+28     	; 0x62a <__addsf3x>
 60e:	48 c1       	rjmp	.+656    	; 0x8a0 <__fp_round>
 610:	39 d1       	rcall	.+626    	; 0x884 <__fp_pscA>
 612:	30 f0       	brcs	.+12     	; 0x620 <__addsf3+0x18>
 614:	3e d1       	rcall	.+636    	; 0x892 <__fp_pscB>
 616:	20 f0       	brcs	.+8      	; 0x620 <__addsf3+0x18>
 618:	31 f4       	brne	.+12     	; 0x626 <__addsf3+0x1e>
 61a:	9f 3f       	cpi	r25, 0xFF	; 255
 61c:	11 f4       	brne	.+4      	; 0x622 <__addsf3+0x1a>
 61e:	1e f4       	brtc	.+6      	; 0x626 <__addsf3+0x1e>
 620:	2e c1       	rjmp	.+604    	; 0x87e <__fp_nan>
 622:	0e f4       	brtc	.+2      	; 0x626 <__addsf3+0x1e>
 624:	e0 95       	com	r30
 626:	e7 fb       	bst	r30, 7
 628:	24 c1       	rjmp	.+584    	; 0x872 <__fp_inf>

0000062a <__addsf3x>:
 62a:	e9 2f       	mov	r30, r25
 62c:	4a d1       	rcall	.+660    	; 0x8c2 <__fp_split3>
 62e:	80 f3       	brcs	.-32     	; 0x610 <__addsf3+0x8>
 630:	ba 17       	cp	r27, r26
 632:	62 07       	cpc	r22, r18
 634:	73 07       	cpc	r23, r19
 636:	84 07       	cpc	r24, r20
 638:	95 07       	cpc	r25, r21
 63a:	18 f0       	brcs	.+6      	; 0x642 <__addsf3x+0x18>
 63c:	71 f4       	brne	.+28     	; 0x65a <__addsf3x+0x30>
 63e:	9e f5       	brtc	.+102    	; 0x6a6 <__addsf3x+0x7c>
 640:	62 c1       	rjmp	.+708    	; 0x906 <__fp_zero>
 642:	0e f4       	brtc	.+2      	; 0x646 <__addsf3x+0x1c>
 644:	e0 95       	com	r30
 646:	0b 2e       	mov	r0, r27
 648:	ba 2f       	mov	r27, r26
 64a:	a0 2d       	mov	r26, r0
 64c:	0b 01       	movw	r0, r22
 64e:	b9 01       	movw	r22, r18
 650:	90 01       	movw	r18, r0
 652:	0c 01       	movw	r0, r24
 654:	ca 01       	movw	r24, r20
 656:	a0 01       	movw	r20, r0
 658:	11 24       	eor	r1, r1
 65a:	ff 27       	eor	r31, r31
 65c:	59 1b       	sub	r21, r25
 65e:	99 f0       	breq	.+38     	; 0x686 <__addsf3x+0x5c>
 660:	59 3f       	cpi	r21, 0xF9	; 249
 662:	50 f4       	brcc	.+20     	; 0x678 <__addsf3x+0x4e>
 664:	50 3e       	cpi	r21, 0xE0	; 224
 666:	68 f1       	brcs	.+90     	; 0x6c2 <__addsf3x+0x98>
 668:	1a 16       	cp	r1, r26
 66a:	f0 40       	sbci	r31, 0x00	; 0
 66c:	a2 2f       	mov	r26, r18
 66e:	23 2f       	mov	r18, r19
 670:	34 2f       	mov	r19, r20
 672:	44 27       	eor	r20, r20
 674:	58 5f       	subi	r21, 0xF8	; 248
 676:	f3 cf       	rjmp	.-26     	; 0x65e <__addsf3x+0x34>
 678:	46 95       	lsr	r20
 67a:	37 95       	ror	r19
 67c:	27 95       	ror	r18
 67e:	a7 95       	ror	r26
 680:	f0 40       	sbci	r31, 0x00	; 0
 682:	53 95       	inc	r21
 684:	c9 f7       	brne	.-14     	; 0x678 <__addsf3x+0x4e>
 686:	7e f4       	brtc	.+30     	; 0x6a6 <__addsf3x+0x7c>
 688:	1f 16       	cp	r1, r31
 68a:	ba 0b       	sbc	r27, r26
 68c:	62 0b       	sbc	r22, r18
 68e:	73 0b       	sbc	r23, r19
 690:	84 0b       	sbc	r24, r20
 692:	ba f0       	brmi	.+46     	; 0x6c2 <__addsf3x+0x98>
 694:	91 50       	subi	r25, 0x01	; 1
 696:	a1 f0       	breq	.+40     	; 0x6c0 <__addsf3x+0x96>
 698:	ff 0f       	add	r31, r31
 69a:	bb 1f       	adc	r27, r27
 69c:	66 1f       	adc	r22, r22
 69e:	77 1f       	adc	r23, r23
 6a0:	88 1f       	adc	r24, r24
 6a2:	c2 f7       	brpl	.-16     	; 0x694 <__addsf3x+0x6a>
 6a4:	0e c0       	rjmp	.+28     	; 0x6c2 <__addsf3x+0x98>
 6a6:	ba 0f       	add	r27, r26
 6a8:	62 1f       	adc	r22, r18
 6aa:	73 1f       	adc	r23, r19
 6ac:	84 1f       	adc	r24, r20
 6ae:	48 f4       	brcc	.+18     	; 0x6c2 <__addsf3x+0x98>
 6b0:	87 95       	ror	r24
 6b2:	77 95       	ror	r23
 6b4:	67 95       	ror	r22
 6b6:	b7 95       	ror	r27
 6b8:	f7 95       	ror	r31
 6ba:	9e 3f       	cpi	r25, 0xFE	; 254
 6bc:	08 f0       	brcs	.+2      	; 0x6c0 <__addsf3x+0x96>
 6be:	b3 cf       	rjmp	.-154    	; 0x626 <__addsf3+0x1e>
 6c0:	93 95       	inc	r25
 6c2:	88 0f       	add	r24, r24
 6c4:	08 f0       	brcs	.+2      	; 0x6c8 <__addsf3x+0x9e>
 6c6:	99 27       	eor	r25, r25
 6c8:	ee 0f       	add	r30, r30
 6ca:	97 95       	ror	r25
 6cc:	87 95       	ror	r24
 6ce:	08 95       	ret

000006d0 <__divsf3>:
 6d0:	0c d0       	rcall	.+24     	; 0x6ea <__divsf3x>
 6d2:	e6 c0       	rjmp	.+460    	; 0x8a0 <__fp_round>
 6d4:	de d0       	rcall	.+444    	; 0x892 <__fp_pscB>
 6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__divsf3+0x18>
 6d8:	d5 d0       	rcall	.+426    	; 0x884 <__fp_pscA>
 6da:	30 f0       	brcs	.+12     	; 0x6e8 <__divsf3+0x18>
 6dc:	21 f4       	brne	.+8      	; 0x6e6 <__divsf3+0x16>
 6de:	5f 3f       	cpi	r21, 0xFF	; 255
 6e0:	19 f0       	breq	.+6      	; 0x6e8 <__divsf3+0x18>
 6e2:	c7 c0       	rjmp	.+398    	; 0x872 <__fp_inf>
 6e4:	51 11       	cpse	r21, r1
 6e6:	10 c1       	rjmp	.+544    	; 0x908 <__fp_szero>
 6e8:	ca c0       	rjmp	.+404    	; 0x87e <__fp_nan>

000006ea <__divsf3x>:
 6ea:	eb d0       	rcall	.+470    	; 0x8c2 <__fp_split3>
 6ec:	98 f3       	brcs	.-26     	; 0x6d4 <__divsf3+0x4>

000006ee <__divsf3_pse>:
 6ee:	99 23       	and	r25, r25
 6f0:	c9 f3       	breq	.-14     	; 0x6e4 <__divsf3+0x14>
 6f2:	55 23       	and	r21, r21
 6f4:	b1 f3       	breq	.-20     	; 0x6e2 <__divsf3+0x12>
 6f6:	95 1b       	sub	r25, r21
 6f8:	55 0b       	sbc	r21, r21
 6fa:	bb 27       	eor	r27, r27
 6fc:	aa 27       	eor	r26, r26
 6fe:	62 17       	cp	r22, r18
 700:	73 07       	cpc	r23, r19
 702:	84 07       	cpc	r24, r20
 704:	38 f0       	brcs	.+14     	; 0x714 <__divsf3_pse+0x26>
 706:	9f 5f       	subi	r25, 0xFF	; 255
 708:	5f 4f       	sbci	r21, 0xFF	; 255
 70a:	22 0f       	add	r18, r18
 70c:	33 1f       	adc	r19, r19
 70e:	44 1f       	adc	r20, r20
 710:	aa 1f       	adc	r26, r26
 712:	a9 f3       	breq	.-22     	; 0x6fe <__divsf3_pse+0x10>
 714:	33 d0       	rcall	.+102    	; 0x77c <__divsf3_pse+0x8e>
 716:	0e 2e       	mov	r0, r30
 718:	3a f0       	brmi	.+14     	; 0x728 <__divsf3_pse+0x3a>
 71a:	e0 e8       	ldi	r30, 0x80	; 128
 71c:	30 d0       	rcall	.+96     	; 0x77e <__divsf3_pse+0x90>
 71e:	91 50       	subi	r25, 0x01	; 1
 720:	50 40       	sbci	r21, 0x00	; 0
 722:	e6 95       	lsr	r30
 724:	00 1c       	adc	r0, r0
 726:	ca f7       	brpl	.-14     	; 0x71a <__divsf3_pse+0x2c>
 728:	29 d0       	rcall	.+82     	; 0x77c <__divsf3_pse+0x8e>
 72a:	fe 2f       	mov	r31, r30
 72c:	27 d0       	rcall	.+78     	; 0x77c <__divsf3_pse+0x8e>
 72e:	66 0f       	add	r22, r22
 730:	77 1f       	adc	r23, r23
 732:	88 1f       	adc	r24, r24
 734:	bb 1f       	adc	r27, r27
 736:	26 17       	cp	r18, r22
 738:	37 07       	cpc	r19, r23
 73a:	48 07       	cpc	r20, r24
 73c:	ab 07       	cpc	r26, r27
 73e:	b0 e8       	ldi	r27, 0x80	; 128
 740:	09 f0       	breq	.+2      	; 0x744 <__divsf3_pse+0x56>
 742:	bb 0b       	sbc	r27, r27
 744:	80 2d       	mov	r24, r0
 746:	bf 01       	movw	r22, r30
 748:	ff 27       	eor	r31, r31
 74a:	93 58       	subi	r25, 0x83	; 131
 74c:	5f 4f       	sbci	r21, 0xFF	; 255
 74e:	2a f0       	brmi	.+10     	; 0x75a <__divsf3_pse+0x6c>
 750:	9e 3f       	cpi	r25, 0xFE	; 254
 752:	51 05       	cpc	r21, r1
 754:	68 f0       	brcs	.+26     	; 0x770 <__divsf3_pse+0x82>
 756:	8d c0       	rjmp	.+282    	; 0x872 <__fp_inf>
 758:	d7 c0       	rjmp	.+430    	; 0x908 <__fp_szero>
 75a:	5f 3f       	cpi	r21, 0xFF	; 255
 75c:	ec f3       	brlt	.-6      	; 0x758 <__divsf3_pse+0x6a>
 75e:	98 3e       	cpi	r25, 0xE8	; 232
 760:	dc f3       	brlt	.-10     	; 0x758 <__divsf3_pse+0x6a>
 762:	86 95       	lsr	r24
 764:	77 95       	ror	r23
 766:	67 95       	ror	r22
 768:	b7 95       	ror	r27
 76a:	f7 95       	ror	r31
 76c:	9f 5f       	subi	r25, 0xFF	; 255
 76e:	c9 f7       	brne	.-14     	; 0x762 <__divsf3_pse+0x74>
 770:	88 0f       	add	r24, r24
 772:	91 1d       	adc	r25, r1
 774:	96 95       	lsr	r25
 776:	87 95       	ror	r24
 778:	97 f9       	bld	r25, 7
 77a:	08 95       	ret
 77c:	e1 e0       	ldi	r30, 0x01	; 1
 77e:	66 0f       	add	r22, r22
 780:	77 1f       	adc	r23, r23
 782:	88 1f       	adc	r24, r24
 784:	bb 1f       	adc	r27, r27
 786:	62 17       	cp	r22, r18
 788:	73 07       	cpc	r23, r19
 78a:	84 07       	cpc	r24, r20
 78c:	ba 07       	cpc	r27, r26
 78e:	20 f0       	brcs	.+8      	; 0x798 <__divsf3_pse+0xaa>
 790:	62 1b       	sub	r22, r18
 792:	73 0b       	sbc	r23, r19
 794:	84 0b       	sbc	r24, r20
 796:	ba 0b       	sbc	r27, r26
 798:	ee 1f       	adc	r30, r30
 79a:	88 f7       	brcc	.-30     	; 0x77e <__divsf3_pse+0x90>
 79c:	e0 95       	com	r30
 79e:	08 95       	ret

000007a0 <__fixunssfsi>:
 7a0:	98 d0       	rcall	.+304    	; 0x8d2 <__fp_splitA>
 7a2:	88 f0       	brcs	.+34     	; 0x7c6 <__fixunssfsi+0x26>
 7a4:	9f 57       	subi	r25, 0x7F	; 127
 7a6:	90 f0       	brcs	.+36     	; 0x7cc <__fixunssfsi+0x2c>
 7a8:	b9 2f       	mov	r27, r25
 7aa:	99 27       	eor	r25, r25
 7ac:	b7 51       	subi	r27, 0x17	; 23
 7ae:	a0 f0       	brcs	.+40     	; 0x7d8 <__fixunssfsi+0x38>
 7b0:	d1 f0       	breq	.+52     	; 0x7e6 <__fixunssfsi+0x46>
 7b2:	66 0f       	add	r22, r22
 7b4:	77 1f       	adc	r23, r23
 7b6:	88 1f       	adc	r24, r24
 7b8:	99 1f       	adc	r25, r25
 7ba:	1a f0       	brmi	.+6      	; 0x7c2 <__fixunssfsi+0x22>
 7bc:	ba 95       	dec	r27
 7be:	c9 f7       	brne	.-14     	; 0x7b2 <__fixunssfsi+0x12>
 7c0:	12 c0       	rjmp	.+36     	; 0x7e6 <__fixunssfsi+0x46>
 7c2:	b1 30       	cpi	r27, 0x01	; 1
 7c4:	81 f0       	breq	.+32     	; 0x7e6 <__fixunssfsi+0x46>
 7c6:	9f d0       	rcall	.+318    	; 0x906 <__fp_zero>
 7c8:	b1 e0       	ldi	r27, 0x01	; 1
 7ca:	08 95       	ret
 7cc:	9c c0       	rjmp	.+312    	; 0x906 <__fp_zero>
 7ce:	67 2f       	mov	r22, r23
 7d0:	78 2f       	mov	r23, r24
 7d2:	88 27       	eor	r24, r24
 7d4:	b8 5f       	subi	r27, 0xF8	; 248
 7d6:	39 f0       	breq	.+14     	; 0x7e6 <__fixunssfsi+0x46>
 7d8:	b9 3f       	cpi	r27, 0xF9	; 249
 7da:	cc f3       	brlt	.-14     	; 0x7ce <__fixunssfsi+0x2e>
 7dc:	86 95       	lsr	r24
 7de:	77 95       	ror	r23
 7e0:	67 95       	ror	r22
 7e2:	b3 95       	inc	r27
 7e4:	d9 f7       	brne	.-10     	; 0x7dc <__fixunssfsi+0x3c>
 7e6:	3e f4       	brtc	.+14     	; 0x7f6 <__fixunssfsi+0x56>
 7e8:	90 95       	com	r25
 7ea:	80 95       	com	r24
 7ec:	70 95       	com	r23
 7ee:	61 95       	neg	r22
 7f0:	7f 4f       	sbci	r23, 0xFF	; 255
 7f2:	8f 4f       	sbci	r24, 0xFF	; 255
 7f4:	9f 4f       	sbci	r25, 0xFF	; 255
 7f6:	08 95       	ret

000007f8 <__floatunsisf>:
 7f8:	e8 94       	clt
 7fa:	09 c0       	rjmp	.+18     	; 0x80e <__floatsisf+0x12>

000007fc <__floatsisf>:
 7fc:	97 fb       	bst	r25, 7
 7fe:	3e f4       	brtc	.+14     	; 0x80e <__floatsisf+0x12>
 800:	90 95       	com	r25
 802:	80 95       	com	r24
 804:	70 95       	com	r23
 806:	61 95       	neg	r22
 808:	7f 4f       	sbci	r23, 0xFF	; 255
 80a:	8f 4f       	sbci	r24, 0xFF	; 255
 80c:	9f 4f       	sbci	r25, 0xFF	; 255
 80e:	99 23       	and	r25, r25
 810:	a9 f0       	breq	.+42     	; 0x83c <__floatsisf+0x40>
 812:	f9 2f       	mov	r31, r25
 814:	96 e9       	ldi	r25, 0x96	; 150
 816:	bb 27       	eor	r27, r27
 818:	93 95       	inc	r25
 81a:	f6 95       	lsr	r31
 81c:	87 95       	ror	r24
 81e:	77 95       	ror	r23
 820:	67 95       	ror	r22
 822:	b7 95       	ror	r27
 824:	f1 11       	cpse	r31, r1
 826:	f8 cf       	rjmp	.-16     	; 0x818 <__floatsisf+0x1c>
 828:	fa f4       	brpl	.+62     	; 0x868 <__floatsisf+0x6c>
 82a:	bb 0f       	add	r27, r27
 82c:	11 f4       	brne	.+4      	; 0x832 <__floatsisf+0x36>
 82e:	60 ff       	sbrs	r22, 0
 830:	1b c0       	rjmp	.+54     	; 0x868 <__floatsisf+0x6c>
 832:	6f 5f       	subi	r22, 0xFF	; 255
 834:	7f 4f       	sbci	r23, 0xFF	; 255
 836:	8f 4f       	sbci	r24, 0xFF	; 255
 838:	9f 4f       	sbci	r25, 0xFF	; 255
 83a:	16 c0       	rjmp	.+44     	; 0x868 <__floatsisf+0x6c>
 83c:	88 23       	and	r24, r24
 83e:	11 f0       	breq	.+4      	; 0x844 <__floatsisf+0x48>
 840:	96 e9       	ldi	r25, 0x96	; 150
 842:	11 c0       	rjmp	.+34     	; 0x866 <__floatsisf+0x6a>
 844:	77 23       	and	r23, r23
 846:	21 f0       	breq	.+8      	; 0x850 <__floatsisf+0x54>
 848:	9e e8       	ldi	r25, 0x8E	; 142
 84a:	87 2f       	mov	r24, r23
 84c:	76 2f       	mov	r23, r22
 84e:	05 c0       	rjmp	.+10     	; 0x85a <__floatsisf+0x5e>
 850:	66 23       	and	r22, r22
 852:	71 f0       	breq	.+28     	; 0x870 <__floatsisf+0x74>
 854:	96 e8       	ldi	r25, 0x86	; 134
 856:	86 2f       	mov	r24, r22
 858:	70 e0       	ldi	r23, 0x00	; 0
 85a:	60 e0       	ldi	r22, 0x00	; 0
 85c:	2a f0       	brmi	.+10     	; 0x868 <__floatsisf+0x6c>
 85e:	9a 95       	dec	r25
 860:	66 0f       	add	r22, r22
 862:	77 1f       	adc	r23, r23
 864:	88 1f       	adc	r24, r24
 866:	da f7       	brpl	.-10     	; 0x85e <__floatsisf+0x62>
 868:	88 0f       	add	r24, r24
 86a:	96 95       	lsr	r25
 86c:	87 95       	ror	r24
 86e:	97 f9       	bld	r25, 7
 870:	08 95       	ret

00000872 <__fp_inf>:
 872:	97 f9       	bld	r25, 7
 874:	9f 67       	ori	r25, 0x7F	; 127
 876:	80 e8       	ldi	r24, 0x80	; 128
 878:	70 e0       	ldi	r23, 0x00	; 0
 87a:	60 e0       	ldi	r22, 0x00	; 0
 87c:	08 95       	ret

0000087e <__fp_nan>:
 87e:	9f ef       	ldi	r25, 0xFF	; 255
 880:	80 ec       	ldi	r24, 0xC0	; 192
 882:	08 95       	ret

00000884 <__fp_pscA>:
 884:	00 24       	eor	r0, r0
 886:	0a 94       	dec	r0
 888:	16 16       	cp	r1, r22
 88a:	17 06       	cpc	r1, r23
 88c:	18 06       	cpc	r1, r24
 88e:	09 06       	cpc	r0, r25
 890:	08 95       	ret

00000892 <__fp_pscB>:
 892:	00 24       	eor	r0, r0
 894:	0a 94       	dec	r0
 896:	12 16       	cp	r1, r18
 898:	13 06       	cpc	r1, r19
 89a:	14 06       	cpc	r1, r20
 89c:	05 06       	cpc	r0, r21
 89e:	08 95       	ret

000008a0 <__fp_round>:
 8a0:	09 2e       	mov	r0, r25
 8a2:	03 94       	inc	r0
 8a4:	00 0c       	add	r0, r0
 8a6:	11 f4       	brne	.+4      	; 0x8ac <__fp_round+0xc>
 8a8:	88 23       	and	r24, r24
 8aa:	52 f0       	brmi	.+20     	; 0x8c0 <__fp_round+0x20>
 8ac:	bb 0f       	add	r27, r27
 8ae:	40 f4       	brcc	.+16     	; 0x8c0 <__fp_round+0x20>
 8b0:	bf 2b       	or	r27, r31
 8b2:	11 f4       	brne	.+4      	; 0x8b8 <__fp_round+0x18>
 8b4:	60 ff       	sbrs	r22, 0
 8b6:	04 c0       	rjmp	.+8      	; 0x8c0 <__fp_round+0x20>
 8b8:	6f 5f       	subi	r22, 0xFF	; 255
 8ba:	7f 4f       	sbci	r23, 0xFF	; 255
 8bc:	8f 4f       	sbci	r24, 0xFF	; 255
 8be:	9f 4f       	sbci	r25, 0xFF	; 255
 8c0:	08 95       	ret

000008c2 <__fp_split3>:
 8c2:	57 fd       	sbrc	r21, 7
 8c4:	90 58       	subi	r25, 0x80	; 128
 8c6:	44 0f       	add	r20, r20
 8c8:	55 1f       	adc	r21, r21
 8ca:	59 f0       	breq	.+22     	; 0x8e2 <__fp_splitA+0x10>
 8cc:	5f 3f       	cpi	r21, 0xFF	; 255
 8ce:	71 f0       	breq	.+28     	; 0x8ec <__fp_splitA+0x1a>
 8d0:	47 95       	ror	r20

000008d2 <__fp_splitA>:
 8d2:	88 0f       	add	r24, r24
 8d4:	97 fb       	bst	r25, 7
 8d6:	99 1f       	adc	r25, r25
 8d8:	61 f0       	breq	.+24     	; 0x8f2 <__fp_splitA+0x20>
 8da:	9f 3f       	cpi	r25, 0xFF	; 255
 8dc:	79 f0       	breq	.+30     	; 0x8fc <__fp_splitA+0x2a>
 8de:	87 95       	ror	r24
 8e0:	08 95       	ret
 8e2:	12 16       	cp	r1, r18
 8e4:	13 06       	cpc	r1, r19
 8e6:	14 06       	cpc	r1, r20
 8e8:	55 1f       	adc	r21, r21
 8ea:	f2 cf       	rjmp	.-28     	; 0x8d0 <__fp_split3+0xe>
 8ec:	46 95       	lsr	r20
 8ee:	f1 df       	rcall	.-30     	; 0x8d2 <__fp_splitA>
 8f0:	08 c0       	rjmp	.+16     	; 0x902 <__fp_splitA+0x30>
 8f2:	16 16       	cp	r1, r22
 8f4:	17 06       	cpc	r1, r23
 8f6:	18 06       	cpc	r1, r24
 8f8:	99 1f       	adc	r25, r25
 8fa:	f1 cf       	rjmp	.-30     	; 0x8de <__fp_splitA+0xc>
 8fc:	86 95       	lsr	r24
 8fe:	71 05       	cpc	r23, r1
 900:	61 05       	cpc	r22, r1
 902:	08 94       	sec
 904:	08 95       	ret

00000906 <__fp_zero>:
 906:	e8 94       	clt

00000908 <__fp_szero>:
 908:	bb 27       	eor	r27, r27
 90a:	66 27       	eor	r22, r22
 90c:	77 27       	eor	r23, r23
 90e:	cb 01       	movw	r24, r22
 910:	97 f9       	bld	r25, 7
 912:	08 95       	ret

00000914 <__mulsf3>:
 914:	0b d0       	rcall	.+22     	; 0x92c <__mulsf3x>
 916:	c4 cf       	rjmp	.-120    	; 0x8a0 <__fp_round>
 918:	b5 df       	rcall	.-150    	; 0x884 <__fp_pscA>
 91a:	28 f0       	brcs	.+10     	; 0x926 <__mulsf3+0x12>
 91c:	ba df       	rcall	.-140    	; 0x892 <__fp_pscB>
 91e:	18 f0       	brcs	.+6      	; 0x926 <__mulsf3+0x12>
 920:	95 23       	and	r25, r21
 922:	09 f0       	breq	.+2      	; 0x926 <__mulsf3+0x12>
 924:	a6 cf       	rjmp	.-180    	; 0x872 <__fp_inf>
 926:	ab cf       	rjmp	.-170    	; 0x87e <__fp_nan>
 928:	11 24       	eor	r1, r1
 92a:	ee cf       	rjmp	.-36     	; 0x908 <__fp_szero>

0000092c <__mulsf3x>:
 92c:	ca df       	rcall	.-108    	; 0x8c2 <__fp_split3>
 92e:	a0 f3       	brcs	.-24     	; 0x918 <__mulsf3+0x4>

00000930 <__mulsf3_pse>:
 930:	95 9f       	mul	r25, r21
 932:	d1 f3       	breq	.-12     	; 0x928 <__mulsf3+0x14>
 934:	95 0f       	add	r25, r21
 936:	50 e0       	ldi	r21, 0x00	; 0
 938:	55 1f       	adc	r21, r21
 93a:	62 9f       	mul	r22, r18
 93c:	f0 01       	movw	r30, r0
 93e:	72 9f       	mul	r23, r18
 940:	bb 27       	eor	r27, r27
 942:	f0 0d       	add	r31, r0
 944:	b1 1d       	adc	r27, r1
 946:	63 9f       	mul	r22, r19
 948:	aa 27       	eor	r26, r26
 94a:	f0 0d       	add	r31, r0
 94c:	b1 1d       	adc	r27, r1
 94e:	aa 1f       	adc	r26, r26
 950:	64 9f       	mul	r22, r20
 952:	66 27       	eor	r22, r22
 954:	b0 0d       	add	r27, r0
 956:	a1 1d       	adc	r26, r1
 958:	66 1f       	adc	r22, r22
 95a:	82 9f       	mul	r24, r18
 95c:	22 27       	eor	r18, r18
 95e:	b0 0d       	add	r27, r0
 960:	a1 1d       	adc	r26, r1
 962:	62 1f       	adc	r22, r18
 964:	73 9f       	mul	r23, r19
 966:	b0 0d       	add	r27, r0
 968:	a1 1d       	adc	r26, r1
 96a:	62 1f       	adc	r22, r18
 96c:	83 9f       	mul	r24, r19
 96e:	a0 0d       	add	r26, r0
 970:	61 1d       	adc	r22, r1
 972:	22 1f       	adc	r18, r18
 974:	74 9f       	mul	r23, r20
 976:	33 27       	eor	r19, r19
 978:	a0 0d       	add	r26, r0
 97a:	61 1d       	adc	r22, r1
 97c:	23 1f       	adc	r18, r19
 97e:	84 9f       	mul	r24, r20
 980:	60 0d       	add	r22, r0
 982:	21 1d       	adc	r18, r1
 984:	82 2f       	mov	r24, r18
 986:	76 2f       	mov	r23, r22
 988:	6a 2f       	mov	r22, r26
 98a:	11 24       	eor	r1, r1
 98c:	9f 57       	subi	r25, 0x7F	; 127
 98e:	50 40       	sbci	r21, 0x00	; 0
 990:	8a f0       	brmi	.+34     	; 0x9b4 <__mulsf3_pse+0x84>
 992:	e1 f0       	breq	.+56     	; 0x9cc <__mulsf3_pse+0x9c>
 994:	88 23       	and	r24, r24
 996:	4a f0       	brmi	.+18     	; 0x9aa <__mulsf3_pse+0x7a>
 998:	ee 0f       	add	r30, r30
 99a:	ff 1f       	adc	r31, r31
 99c:	bb 1f       	adc	r27, r27
 99e:	66 1f       	adc	r22, r22
 9a0:	77 1f       	adc	r23, r23
 9a2:	88 1f       	adc	r24, r24
 9a4:	91 50       	subi	r25, 0x01	; 1
 9a6:	50 40       	sbci	r21, 0x00	; 0
 9a8:	a9 f7       	brne	.-22     	; 0x994 <__mulsf3_pse+0x64>
 9aa:	9e 3f       	cpi	r25, 0xFE	; 254
 9ac:	51 05       	cpc	r21, r1
 9ae:	70 f0       	brcs	.+28     	; 0x9cc <__mulsf3_pse+0x9c>
 9b0:	60 cf       	rjmp	.-320    	; 0x872 <__fp_inf>
 9b2:	aa cf       	rjmp	.-172    	; 0x908 <__fp_szero>
 9b4:	5f 3f       	cpi	r21, 0xFF	; 255
 9b6:	ec f3       	brlt	.-6      	; 0x9b2 <__mulsf3_pse+0x82>
 9b8:	98 3e       	cpi	r25, 0xE8	; 232
 9ba:	dc f3       	brlt	.-10     	; 0x9b2 <__mulsf3_pse+0x82>
 9bc:	86 95       	lsr	r24
 9be:	77 95       	ror	r23
 9c0:	67 95       	ror	r22
 9c2:	b7 95       	ror	r27
 9c4:	f7 95       	ror	r31
 9c6:	e7 95       	ror	r30
 9c8:	9f 5f       	subi	r25, 0xFF	; 255
 9ca:	c1 f7       	brne	.-16     	; 0x9bc <__mulsf3_pse+0x8c>
 9cc:	fe 2b       	or	r31, r30
 9ce:	88 0f       	add	r24, r24
 9d0:	91 1d       	adc	r25, r1
 9d2:	96 95       	lsr	r25
 9d4:	87 95       	ror	r24
 9d6:	97 f9       	bld	r25, 7
 9d8:	08 95       	ret

000009da <sprintf>:
 9da:	ae e0       	ldi	r26, 0x0E	; 14
 9dc:	b0 e0       	ldi	r27, 0x00	; 0
 9de:	e2 ef       	ldi	r30, 0xF2	; 242
 9e0:	f4 e0       	ldi	r31, 0x04	; 4
 9e2:	a1 c2       	rjmp	.+1346   	; 0xf26 <__prologue_saves__+0x1c>
 9e4:	0d 89       	ldd	r16, Y+21	; 0x15
 9e6:	1e 89       	ldd	r17, Y+22	; 0x16
 9e8:	86 e0       	ldi	r24, 0x06	; 6
 9ea:	8c 83       	std	Y+4, r24	; 0x04
 9ec:	1a 83       	std	Y+2, r17	; 0x02
 9ee:	09 83       	std	Y+1, r16	; 0x01
 9f0:	8f ef       	ldi	r24, 0xFF	; 255
 9f2:	9f e7       	ldi	r25, 0x7F	; 127
 9f4:	9e 83       	std	Y+6, r25	; 0x06
 9f6:	8d 83       	std	Y+5, r24	; 0x05
 9f8:	9e 01       	movw	r18, r28
 9fa:	27 5e       	subi	r18, 0xE7	; 231
 9fc:	3f 4f       	sbci	r19, 0xFF	; 255
 9fe:	ce 01       	movw	r24, r28
 a00:	01 96       	adiw	r24, 0x01	; 1
 a02:	6f 89       	ldd	r22, Y+23	; 0x17
 a04:	78 8d       	ldd	r23, Y+24	; 0x18
 a06:	a9 01       	movw	r20, r18
 a08:	08 d0       	rcall	.+16     	; 0xa1a <vfprintf>
 a0a:	ef 81       	ldd	r30, Y+7	; 0x07
 a0c:	f8 85       	ldd	r31, Y+8	; 0x08
 a0e:	e0 0f       	add	r30, r16
 a10:	f1 1f       	adc	r31, r17
 a12:	10 82       	st	Z, r1
 a14:	2e 96       	adiw	r28, 0x0e	; 14
 a16:	e4 e0       	ldi	r30, 0x04	; 4
 a18:	a2 c2       	rjmp	.+1348   	; 0xf5e <__epilogue_restores__+0x1c>

00000a1a <vfprintf>:
 a1a:	ac e0       	ldi	r26, 0x0C	; 12
 a1c:	b0 e0       	ldi	r27, 0x00	; 0
 a1e:	e2 e1       	ldi	r30, 0x12	; 18
 a20:	f5 e0       	ldi	r31, 0x05	; 5
 a22:	73 c2       	rjmp	.+1254   	; 0xf0a <__prologue_saves__>
 a24:	6c 01       	movw	r12, r24
 a26:	1b 01       	movw	r2, r22
 a28:	8a 01       	movw	r16, r20
 a2a:	fc 01       	movw	r30, r24
 a2c:	17 82       	std	Z+7, r1	; 0x07
 a2e:	16 82       	std	Z+6, r1	; 0x06
 a30:	83 81       	ldd	r24, Z+3	; 0x03
 a32:	81 ff       	sbrs	r24, 1
 a34:	c4 c1       	rjmp	.+904    	; 0xdbe <vfprintf+0x3a4>
 a36:	2e 01       	movw	r4, r28
 a38:	08 94       	sec
 a3a:	41 1c       	adc	r4, r1
 a3c:	51 1c       	adc	r5, r1
 a3e:	f6 01       	movw	r30, r12
 a40:	93 81       	ldd	r25, Z+3	; 0x03
 a42:	f1 01       	movw	r30, r2
 a44:	93 fd       	sbrc	r25, 3
 a46:	85 91       	lpm	r24, Z+
 a48:	93 ff       	sbrs	r25, 3
 a4a:	81 91       	ld	r24, Z+
 a4c:	1f 01       	movw	r2, r30
 a4e:	88 23       	and	r24, r24
 a50:	09 f4       	brne	.+2      	; 0xa54 <vfprintf+0x3a>
 a52:	b1 c1       	rjmp	.+866    	; 0xdb6 <vfprintf+0x39c>
 a54:	85 32       	cpi	r24, 0x25	; 37
 a56:	39 f4       	brne	.+14     	; 0xa66 <vfprintf+0x4c>
 a58:	93 fd       	sbrc	r25, 3
 a5a:	85 91       	lpm	r24, Z+
 a5c:	93 ff       	sbrs	r25, 3
 a5e:	81 91       	ld	r24, Z+
 a60:	1f 01       	movw	r2, r30
 a62:	85 32       	cpi	r24, 0x25	; 37
 a64:	21 f4       	brne	.+8      	; 0xa6e <vfprintf+0x54>
 a66:	90 e0       	ldi	r25, 0x00	; 0
 a68:	b6 01       	movw	r22, r12
 a6a:	c5 d1       	rcall	.+906    	; 0xdf6 <fputc>
 a6c:	e8 cf       	rjmp	.-48     	; 0xa3e <vfprintf+0x24>
 a6e:	ee 24       	eor	r14, r14
 a70:	ff 24       	eor	r15, r15
 a72:	20 e0       	ldi	r18, 0x00	; 0
 a74:	20 32       	cpi	r18, 0x20	; 32
 a76:	b0 f4       	brcc	.+44     	; 0xaa4 <vfprintf+0x8a>
 a78:	8b 32       	cpi	r24, 0x2B	; 43
 a7a:	69 f0       	breq	.+26     	; 0xa96 <vfprintf+0x7c>
 a7c:	8c 32       	cpi	r24, 0x2C	; 44
 a7e:	28 f4       	brcc	.+10     	; 0xa8a <vfprintf+0x70>
 a80:	80 32       	cpi	r24, 0x20	; 32
 a82:	51 f0       	breq	.+20     	; 0xa98 <vfprintf+0x7e>
 a84:	83 32       	cpi	r24, 0x23	; 35
 a86:	71 f4       	brne	.+28     	; 0xaa4 <vfprintf+0x8a>
 a88:	0b c0       	rjmp	.+22     	; 0xaa0 <vfprintf+0x86>
 a8a:	8d 32       	cpi	r24, 0x2D	; 45
 a8c:	39 f0       	breq	.+14     	; 0xa9c <vfprintf+0x82>
 a8e:	80 33       	cpi	r24, 0x30	; 48
 a90:	49 f4       	brne	.+18     	; 0xaa4 <vfprintf+0x8a>
 a92:	21 60       	ori	r18, 0x01	; 1
 a94:	2c c0       	rjmp	.+88     	; 0xaee <vfprintf+0xd4>
 a96:	22 60       	ori	r18, 0x02	; 2
 a98:	24 60       	ori	r18, 0x04	; 4
 a9a:	29 c0       	rjmp	.+82     	; 0xaee <vfprintf+0xd4>
 a9c:	28 60       	ori	r18, 0x08	; 8
 a9e:	27 c0       	rjmp	.+78     	; 0xaee <vfprintf+0xd4>
 aa0:	20 61       	ori	r18, 0x10	; 16
 aa2:	25 c0       	rjmp	.+74     	; 0xaee <vfprintf+0xd4>
 aa4:	27 fd       	sbrc	r18, 7
 aa6:	2c c0       	rjmp	.+88     	; 0xb00 <vfprintf+0xe6>
 aa8:	38 2f       	mov	r19, r24
 aaa:	30 53       	subi	r19, 0x30	; 48
 aac:	3a 30       	cpi	r19, 0x0A	; 10
 aae:	98 f4       	brcc	.+38     	; 0xad6 <vfprintf+0xbc>
 ab0:	26 ff       	sbrs	r18, 6
 ab2:	08 c0       	rjmp	.+16     	; 0xac4 <vfprintf+0xaa>
 ab4:	8e 2d       	mov	r24, r14
 ab6:	88 0f       	add	r24, r24
 ab8:	e8 2e       	mov	r14, r24
 aba:	ee 0c       	add	r14, r14
 abc:	ee 0c       	add	r14, r14
 abe:	e8 0e       	add	r14, r24
 ac0:	e3 0e       	add	r14, r19
 ac2:	15 c0       	rjmp	.+42     	; 0xaee <vfprintf+0xd4>
 ac4:	8f 2d       	mov	r24, r15
 ac6:	88 0f       	add	r24, r24
 ac8:	f8 2e       	mov	r15, r24
 aca:	ff 0c       	add	r15, r15
 acc:	ff 0c       	add	r15, r15
 ace:	f8 0e       	add	r15, r24
 ad0:	f3 0e       	add	r15, r19
 ad2:	20 62       	ori	r18, 0x20	; 32
 ad4:	0c c0       	rjmp	.+24     	; 0xaee <vfprintf+0xd4>
 ad6:	8e 32       	cpi	r24, 0x2E	; 46
 ad8:	21 f4       	brne	.+8      	; 0xae2 <vfprintf+0xc8>
 ada:	26 fd       	sbrc	r18, 6
 adc:	6c c1       	rjmp	.+728    	; 0xdb6 <vfprintf+0x39c>
 ade:	20 64       	ori	r18, 0x40	; 64
 ae0:	06 c0       	rjmp	.+12     	; 0xaee <vfprintf+0xd4>
 ae2:	8c 36       	cpi	r24, 0x6C	; 108
 ae4:	11 f4       	brne	.+4      	; 0xaea <vfprintf+0xd0>
 ae6:	20 68       	ori	r18, 0x80	; 128
 ae8:	02 c0       	rjmp	.+4      	; 0xaee <vfprintf+0xd4>
 aea:	88 36       	cpi	r24, 0x68	; 104
 aec:	49 f4       	brne	.+18     	; 0xb00 <vfprintf+0xe6>
 aee:	f1 01       	movw	r30, r2
 af0:	93 fd       	sbrc	r25, 3
 af2:	85 91       	lpm	r24, Z+
 af4:	93 ff       	sbrs	r25, 3
 af6:	81 91       	ld	r24, Z+
 af8:	1f 01       	movw	r2, r30
 afa:	88 23       	and	r24, r24
 afc:	09 f0       	breq	.+2      	; 0xb00 <vfprintf+0xe6>
 afe:	ba cf       	rjmp	.-140    	; 0xa74 <vfprintf+0x5a>
 b00:	98 2f       	mov	r25, r24
 b02:	95 54       	subi	r25, 0x45	; 69
 b04:	93 30       	cpi	r25, 0x03	; 3
 b06:	18 f0       	brcs	.+6      	; 0xb0e <vfprintf+0xf4>
 b08:	90 52       	subi	r25, 0x20	; 32
 b0a:	93 30       	cpi	r25, 0x03	; 3
 b0c:	28 f4       	brcc	.+10     	; 0xb18 <vfprintf+0xfe>
 b0e:	0c 5f       	subi	r16, 0xFC	; 252
 b10:	1f 4f       	sbci	r17, 0xFF	; 255
 b12:	ff e3       	ldi	r31, 0x3F	; 63
 b14:	f9 83       	std	Y+1, r31	; 0x01
 b16:	0d c0       	rjmp	.+26     	; 0xb32 <vfprintf+0x118>
 b18:	83 36       	cpi	r24, 0x63	; 99
 b1a:	31 f0       	breq	.+12     	; 0xb28 <vfprintf+0x10e>
 b1c:	83 37       	cpi	r24, 0x73	; 115
 b1e:	71 f0       	breq	.+28     	; 0xb3c <vfprintf+0x122>
 b20:	83 35       	cpi	r24, 0x53	; 83
 b22:	09 f0       	breq	.+2      	; 0xb26 <vfprintf+0x10c>
 b24:	5c c0       	rjmp	.+184    	; 0xbde <vfprintf+0x1c4>
 b26:	21 c0       	rjmp	.+66     	; 0xb6a <vfprintf+0x150>
 b28:	f8 01       	movw	r30, r16
 b2a:	80 81       	ld	r24, Z
 b2c:	89 83       	std	Y+1, r24	; 0x01
 b2e:	0e 5f       	subi	r16, 0xFE	; 254
 b30:	1f 4f       	sbci	r17, 0xFF	; 255
 b32:	42 01       	movw	r8, r4
 b34:	71 e0       	ldi	r23, 0x01	; 1
 b36:	a7 2e       	mov	r10, r23
 b38:	b1 2c       	mov	r11, r1
 b3a:	15 c0       	rjmp	.+42     	; 0xb66 <vfprintf+0x14c>
 b3c:	62 e0       	ldi	r22, 0x02	; 2
 b3e:	66 2e       	mov	r6, r22
 b40:	71 2c       	mov	r7, r1
 b42:	60 0e       	add	r6, r16
 b44:	71 1e       	adc	r7, r17
 b46:	f8 01       	movw	r30, r16
 b48:	80 80       	ld	r8, Z
 b4a:	91 80       	ldd	r9, Z+1	; 0x01
 b4c:	26 ff       	sbrs	r18, 6
 b4e:	03 c0       	rjmp	.+6      	; 0xb56 <vfprintf+0x13c>
 b50:	6e 2d       	mov	r22, r14
 b52:	70 e0       	ldi	r23, 0x00	; 0
 b54:	02 c0       	rjmp	.+4      	; 0xb5a <vfprintf+0x140>
 b56:	6f ef       	ldi	r22, 0xFF	; 255
 b58:	7f ef       	ldi	r23, 0xFF	; 255
 b5a:	c4 01       	movw	r24, r8
 b5c:	2c 87       	std	Y+12, r18	; 0x0c
 b5e:	40 d1       	rcall	.+640    	; 0xde0 <strnlen>
 b60:	5c 01       	movw	r10, r24
 b62:	83 01       	movw	r16, r6
 b64:	2c 85       	ldd	r18, Y+12	; 0x0c
 b66:	2f 77       	andi	r18, 0x7F	; 127
 b68:	16 c0       	rjmp	.+44     	; 0xb96 <vfprintf+0x17c>
 b6a:	52 e0       	ldi	r21, 0x02	; 2
 b6c:	65 2e       	mov	r6, r21
 b6e:	71 2c       	mov	r7, r1
 b70:	60 0e       	add	r6, r16
 b72:	71 1e       	adc	r7, r17
 b74:	f8 01       	movw	r30, r16
 b76:	80 80       	ld	r8, Z
 b78:	91 80       	ldd	r9, Z+1	; 0x01
 b7a:	26 ff       	sbrs	r18, 6
 b7c:	03 c0       	rjmp	.+6      	; 0xb84 <vfprintf+0x16a>
 b7e:	6e 2d       	mov	r22, r14
 b80:	70 e0       	ldi	r23, 0x00	; 0
 b82:	02 c0       	rjmp	.+4      	; 0xb88 <vfprintf+0x16e>
 b84:	6f ef       	ldi	r22, 0xFF	; 255
 b86:	7f ef       	ldi	r23, 0xFF	; 255
 b88:	c4 01       	movw	r24, r8
 b8a:	2c 87       	std	Y+12, r18	; 0x0c
 b8c:	1e d1       	rcall	.+572    	; 0xdca <strnlen_P>
 b8e:	5c 01       	movw	r10, r24
 b90:	2c 85       	ldd	r18, Y+12	; 0x0c
 b92:	20 68       	ori	r18, 0x80	; 128
 b94:	83 01       	movw	r16, r6
 b96:	23 fd       	sbrc	r18, 3
 b98:	1e c0       	rjmp	.+60     	; 0xbd6 <vfprintf+0x1bc>
 b9a:	07 c0       	rjmp	.+14     	; 0xbaa <vfprintf+0x190>
 b9c:	80 e2       	ldi	r24, 0x20	; 32
 b9e:	90 e0       	ldi	r25, 0x00	; 0
 ba0:	b6 01       	movw	r22, r12
 ba2:	2c 87       	std	Y+12, r18	; 0x0c
 ba4:	28 d1       	rcall	.+592    	; 0xdf6 <fputc>
 ba6:	fa 94       	dec	r15
 ba8:	2c 85       	ldd	r18, Y+12	; 0x0c
 baa:	8f 2d       	mov	r24, r15
 bac:	90 e0       	ldi	r25, 0x00	; 0
 bae:	a8 16       	cp	r10, r24
 bb0:	b9 06       	cpc	r11, r25
 bb2:	a0 f3       	brcs	.-24     	; 0xb9c <vfprintf+0x182>
 bb4:	10 c0       	rjmp	.+32     	; 0xbd6 <vfprintf+0x1bc>
 bb6:	f4 01       	movw	r30, r8
 bb8:	27 fd       	sbrc	r18, 7
 bba:	85 91       	lpm	r24, Z+
 bbc:	27 ff       	sbrs	r18, 7
 bbe:	81 91       	ld	r24, Z+
 bc0:	4f 01       	movw	r8, r30
 bc2:	90 e0       	ldi	r25, 0x00	; 0
 bc4:	b6 01       	movw	r22, r12
 bc6:	2c 87       	std	Y+12, r18	; 0x0c
 bc8:	16 d1       	rcall	.+556    	; 0xdf6 <fputc>
 bca:	2c 85       	ldd	r18, Y+12	; 0x0c
 bcc:	f1 10       	cpse	r15, r1
 bce:	fa 94       	dec	r15
 bd0:	08 94       	sec
 bd2:	a1 08       	sbc	r10, r1
 bd4:	b1 08       	sbc	r11, r1
 bd6:	a1 14       	cp	r10, r1
 bd8:	b1 04       	cpc	r11, r1
 bda:	69 f7       	brne	.-38     	; 0xbb6 <vfprintf+0x19c>
 bdc:	e9 c0       	rjmp	.+466    	; 0xdb0 <vfprintf+0x396>
 bde:	84 36       	cpi	r24, 0x64	; 100
 be0:	11 f0       	breq	.+4      	; 0xbe6 <vfprintf+0x1cc>
 be2:	89 36       	cpi	r24, 0x69	; 105
 be4:	41 f5       	brne	.+80     	; 0xc36 <vfprintf+0x21c>
 be6:	27 ff       	sbrs	r18, 7
 be8:	08 c0       	rjmp	.+16     	; 0xbfa <vfprintf+0x1e0>
 bea:	f8 01       	movw	r30, r16
 bec:	60 81       	ld	r22, Z
 bee:	71 81       	ldd	r23, Z+1	; 0x01
 bf0:	82 81       	ldd	r24, Z+2	; 0x02
 bf2:	93 81       	ldd	r25, Z+3	; 0x03
 bf4:	0c 5f       	subi	r16, 0xFC	; 252
 bf6:	1f 4f       	sbci	r17, 0xFF	; 255
 bf8:	09 c0       	rjmp	.+18     	; 0xc0c <vfprintf+0x1f2>
 bfa:	f8 01       	movw	r30, r16
 bfc:	60 81       	ld	r22, Z
 bfe:	71 81       	ldd	r23, Z+1	; 0x01
 c00:	88 27       	eor	r24, r24
 c02:	77 fd       	sbrc	r23, 7
 c04:	80 95       	com	r24
 c06:	98 2f       	mov	r25, r24
 c08:	0e 5f       	subi	r16, 0xFE	; 254
 c0a:	1f 4f       	sbci	r17, 0xFF	; 255
 c0c:	4f e6       	ldi	r20, 0x6F	; 111
 c0e:	b4 2e       	mov	r11, r20
 c10:	b2 22       	and	r11, r18
 c12:	97 ff       	sbrs	r25, 7
 c14:	09 c0       	rjmp	.+18     	; 0xc28 <vfprintf+0x20e>
 c16:	90 95       	com	r25
 c18:	80 95       	com	r24
 c1a:	70 95       	com	r23
 c1c:	61 95       	neg	r22
 c1e:	7f 4f       	sbci	r23, 0xFF	; 255
 c20:	8f 4f       	sbci	r24, 0xFF	; 255
 c22:	9f 4f       	sbci	r25, 0xFF	; 255
 c24:	f0 e8       	ldi	r31, 0x80	; 128
 c26:	bf 2a       	or	r11, r31
 c28:	a2 01       	movw	r20, r4
 c2a:	2a e0       	ldi	r18, 0x0A	; 10
 c2c:	30 e0       	ldi	r19, 0x00	; 0
 c2e:	0f d1       	rcall	.+542    	; 0xe4e <__ultoa_invert>
 c30:	78 2e       	mov	r7, r24
 c32:	74 18       	sub	r7, r4
 c34:	44 c0       	rjmp	.+136    	; 0xcbe <vfprintf+0x2a4>
 c36:	85 37       	cpi	r24, 0x75	; 117
 c38:	31 f4       	brne	.+12     	; 0xc46 <vfprintf+0x22c>
 c3a:	3f ee       	ldi	r19, 0xEF	; 239
 c3c:	b3 2e       	mov	r11, r19
 c3e:	b2 22       	and	r11, r18
 c40:	2a e0       	ldi	r18, 0x0A	; 10
 c42:	30 e0       	ldi	r19, 0x00	; 0
 c44:	25 c0       	rjmp	.+74     	; 0xc90 <vfprintf+0x276>
 c46:	99 ef       	ldi	r25, 0xF9	; 249
 c48:	b9 2e       	mov	r11, r25
 c4a:	b2 22       	and	r11, r18
 c4c:	8f 36       	cpi	r24, 0x6F	; 111
 c4e:	c1 f0       	breq	.+48     	; 0xc80 <vfprintf+0x266>
 c50:	80 37       	cpi	r24, 0x70	; 112
 c52:	20 f4       	brcc	.+8      	; 0xc5c <vfprintf+0x242>
 c54:	88 35       	cpi	r24, 0x58	; 88
 c56:	09 f0       	breq	.+2      	; 0xc5a <vfprintf+0x240>
 c58:	ae c0       	rjmp	.+348    	; 0xdb6 <vfprintf+0x39c>
 c5a:	0d c0       	rjmp	.+26     	; 0xc76 <vfprintf+0x25c>
 c5c:	80 37       	cpi	r24, 0x70	; 112
 c5e:	21 f0       	breq	.+8      	; 0xc68 <vfprintf+0x24e>
 c60:	88 37       	cpi	r24, 0x78	; 120
 c62:	09 f0       	breq	.+2      	; 0xc66 <vfprintf+0x24c>
 c64:	a8 c0       	rjmp	.+336    	; 0xdb6 <vfprintf+0x39c>
 c66:	02 c0       	rjmp	.+4      	; 0xc6c <vfprintf+0x252>
 c68:	20 e1       	ldi	r18, 0x10	; 16
 c6a:	b2 2a       	or	r11, r18
 c6c:	b4 fe       	sbrs	r11, 4
 c6e:	0b c0       	rjmp	.+22     	; 0xc86 <vfprintf+0x26c>
 c70:	84 e0       	ldi	r24, 0x04	; 4
 c72:	b8 2a       	or	r11, r24
 c74:	08 c0       	rjmp	.+16     	; 0xc86 <vfprintf+0x26c>
 c76:	b4 fe       	sbrs	r11, 4
 c78:	09 c0       	rjmp	.+18     	; 0xc8c <vfprintf+0x272>
 c7a:	e6 e0       	ldi	r30, 0x06	; 6
 c7c:	be 2a       	or	r11, r30
 c7e:	06 c0       	rjmp	.+12     	; 0xc8c <vfprintf+0x272>
 c80:	28 e0       	ldi	r18, 0x08	; 8
 c82:	30 e0       	ldi	r19, 0x00	; 0
 c84:	05 c0       	rjmp	.+10     	; 0xc90 <vfprintf+0x276>
 c86:	20 e1       	ldi	r18, 0x10	; 16
 c88:	30 e0       	ldi	r19, 0x00	; 0
 c8a:	02 c0       	rjmp	.+4      	; 0xc90 <vfprintf+0x276>
 c8c:	20 e1       	ldi	r18, 0x10	; 16
 c8e:	32 e0       	ldi	r19, 0x02	; 2
 c90:	b7 fe       	sbrs	r11, 7
 c92:	08 c0       	rjmp	.+16     	; 0xca4 <vfprintf+0x28a>
 c94:	f8 01       	movw	r30, r16
 c96:	60 81       	ld	r22, Z
 c98:	71 81       	ldd	r23, Z+1	; 0x01
 c9a:	82 81       	ldd	r24, Z+2	; 0x02
 c9c:	93 81       	ldd	r25, Z+3	; 0x03
 c9e:	0c 5f       	subi	r16, 0xFC	; 252
 ca0:	1f 4f       	sbci	r17, 0xFF	; 255
 ca2:	07 c0       	rjmp	.+14     	; 0xcb2 <vfprintf+0x298>
 ca4:	f8 01       	movw	r30, r16
 ca6:	60 81       	ld	r22, Z
 ca8:	71 81       	ldd	r23, Z+1	; 0x01
 caa:	80 e0       	ldi	r24, 0x00	; 0
 cac:	90 e0       	ldi	r25, 0x00	; 0
 cae:	0e 5f       	subi	r16, 0xFE	; 254
 cb0:	1f 4f       	sbci	r17, 0xFF	; 255
 cb2:	a2 01       	movw	r20, r4
 cb4:	cc d0       	rcall	.+408    	; 0xe4e <__ultoa_invert>
 cb6:	78 2e       	mov	r7, r24
 cb8:	74 18       	sub	r7, r4
 cba:	ff e7       	ldi	r31, 0x7F	; 127
 cbc:	bf 22       	and	r11, r31
 cbe:	b6 fe       	sbrs	r11, 6
 cc0:	0b c0       	rjmp	.+22     	; 0xcd8 <vfprintf+0x2be>
 cc2:	2e ef       	ldi	r18, 0xFE	; 254
 cc4:	b2 22       	and	r11, r18
 cc6:	7e 14       	cp	r7, r14
 cc8:	38 f4       	brcc	.+14     	; 0xcd8 <vfprintf+0x2be>
 cca:	b4 fe       	sbrs	r11, 4
 ccc:	07 c0       	rjmp	.+14     	; 0xcdc <vfprintf+0x2c2>
 cce:	b2 fc       	sbrc	r11, 2
 cd0:	05 c0       	rjmp	.+10     	; 0xcdc <vfprintf+0x2c2>
 cd2:	8f ee       	ldi	r24, 0xEF	; 239
 cd4:	b8 22       	and	r11, r24
 cd6:	02 c0       	rjmp	.+4      	; 0xcdc <vfprintf+0x2c2>
 cd8:	a7 2c       	mov	r10, r7
 cda:	01 c0       	rjmp	.+2      	; 0xcde <vfprintf+0x2c4>
 cdc:	ae 2c       	mov	r10, r14
 cde:	8b 2d       	mov	r24, r11
 ce0:	90 e0       	ldi	r25, 0x00	; 0
 ce2:	b4 fe       	sbrs	r11, 4
 ce4:	0d c0       	rjmp	.+26     	; 0xd00 <vfprintf+0x2e6>
 ce6:	fe 01       	movw	r30, r28
 ce8:	e7 0d       	add	r30, r7
 cea:	f1 1d       	adc	r31, r1
 cec:	20 81       	ld	r18, Z
 cee:	20 33       	cpi	r18, 0x30	; 48
 cf0:	19 f4       	brne	.+6      	; 0xcf8 <vfprintf+0x2de>
 cf2:	e9 ee       	ldi	r30, 0xE9	; 233
 cf4:	be 22       	and	r11, r30
 cf6:	09 c0       	rjmp	.+18     	; 0xd0a <vfprintf+0x2f0>
 cf8:	a3 94       	inc	r10
 cfa:	b2 fe       	sbrs	r11, 2
 cfc:	06 c0       	rjmp	.+12     	; 0xd0a <vfprintf+0x2f0>
 cfe:	04 c0       	rjmp	.+8      	; 0xd08 <vfprintf+0x2ee>
 d00:	86 78       	andi	r24, 0x86	; 134
 d02:	90 70       	andi	r25, 0x00	; 0
 d04:	00 97       	sbiw	r24, 0x00	; 0
 d06:	09 f0       	breq	.+2      	; 0xd0a <vfprintf+0x2f0>
 d08:	a3 94       	inc	r10
 d0a:	8b 2c       	mov	r8, r11
 d0c:	99 24       	eor	r9, r9
 d0e:	b3 fc       	sbrc	r11, 3
 d10:	13 c0       	rjmp	.+38     	; 0xd38 <vfprintf+0x31e>
 d12:	b0 fe       	sbrs	r11, 0
 d14:	0e c0       	rjmp	.+28     	; 0xd32 <vfprintf+0x318>
 d16:	af 14       	cp	r10, r15
 d18:	28 f4       	brcc	.+10     	; 0xd24 <vfprintf+0x30a>
 d1a:	e7 2c       	mov	r14, r7
 d1c:	ef 0c       	add	r14, r15
 d1e:	ea 18       	sub	r14, r10
 d20:	af 2c       	mov	r10, r15
 d22:	07 c0       	rjmp	.+14     	; 0xd32 <vfprintf+0x318>
 d24:	e7 2c       	mov	r14, r7
 d26:	05 c0       	rjmp	.+10     	; 0xd32 <vfprintf+0x318>
 d28:	80 e2       	ldi	r24, 0x20	; 32
 d2a:	90 e0       	ldi	r25, 0x00	; 0
 d2c:	b6 01       	movw	r22, r12
 d2e:	63 d0       	rcall	.+198    	; 0xdf6 <fputc>
 d30:	a3 94       	inc	r10
 d32:	af 14       	cp	r10, r15
 d34:	c8 f3       	brcs	.-14     	; 0xd28 <vfprintf+0x30e>
 d36:	04 c0       	rjmp	.+8      	; 0xd40 <vfprintf+0x326>
 d38:	af 14       	cp	r10, r15
 d3a:	10 f4       	brcc	.+4      	; 0xd40 <vfprintf+0x326>
 d3c:	fa 18       	sub	r15, r10
 d3e:	01 c0       	rjmp	.+2      	; 0xd42 <vfprintf+0x328>
 d40:	ff 24       	eor	r15, r15
 d42:	84 fe       	sbrs	r8, 4
 d44:	0e c0       	rjmp	.+28     	; 0xd62 <vfprintf+0x348>
 d46:	80 e3       	ldi	r24, 0x30	; 48
 d48:	90 e0       	ldi	r25, 0x00	; 0
 d4a:	b6 01       	movw	r22, r12
 d4c:	54 d0       	rcall	.+168    	; 0xdf6 <fputc>
 d4e:	82 fe       	sbrs	r8, 2
 d50:	1d c0       	rjmp	.+58     	; 0xd8c <vfprintf+0x372>
 d52:	81 fe       	sbrs	r8, 1
 d54:	03 c0       	rjmp	.+6      	; 0xd5c <vfprintf+0x342>
 d56:	88 e5       	ldi	r24, 0x58	; 88
 d58:	90 e0       	ldi	r25, 0x00	; 0
 d5a:	10 c0       	rjmp	.+32     	; 0xd7c <vfprintf+0x362>
 d5c:	88 e7       	ldi	r24, 0x78	; 120
 d5e:	90 e0       	ldi	r25, 0x00	; 0
 d60:	0d c0       	rjmp	.+26     	; 0xd7c <vfprintf+0x362>
 d62:	c4 01       	movw	r24, r8
 d64:	86 78       	andi	r24, 0x86	; 134
 d66:	90 70       	andi	r25, 0x00	; 0
 d68:	00 97       	sbiw	r24, 0x00	; 0
 d6a:	81 f0       	breq	.+32     	; 0xd8c <vfprintf+0x372>
 d6c:	81 fc       	sbrc	r8, 1
 d6e:	02 c0       	rjmp	.+4      	; 0xd74 <vfprintf+0x35a>
 d70:	80 e2       	ldi	r24, 0x20	; 32
 d72:	01 c0       	rjmp	.+2      	; 0xd76 <vfprintf+0x35c>
 d74:	8b e2       	ldi	r24, 0x2B	; 43
 d76:	b7 fc       	sbrc	r11, 7
 d78:	8d e2       	ldi	r24, 0x2D	; 45
 d7a:	90 e0       	ldi	r25, 0x00	; 0
 d7c:	b6 01       	movw	r22, r12
 d7e:	3b d0       	rcall	.+118    	; 0xdf6 <fputc>
 d80:	05 c0       	rjmp	.+10     	; 0xd8c <vfprintf+0x372>
 d82:	80 e3       	ldi	r24, 0x30	; 48
 d84:	90 e0       	ldi	r25, 0x00	; 0
 d86:	b6 01       	movw	r22, r12
 d88:	36 d0       	rcall	.+108    	; 0xdf6 <fputc>
 d8a:	ea 94       	dec	r14
 d8c:	7e 14       	cp	r7, r14
 d8e:	c8 f3       	brcs	.-14     	; 0xd82 <vfprintf+0x368>
 d90:	7a 94       	dec	r7
 d92:	f2 01       	movw	r30, r4
 d94:	e7 0d       	add	r30, r7
 d96:	f1 1d       	adc	r31, r1
 d98:	80 81       	ld	r24, Z
 d9a:	90 e0       	ldi	r25, 0x00	; 0
 d9c:	b6 01       	movw	r22, r12
 d9e:	2b d0       	rcall	.+86     	; 0xdf6 <fputc>
 da0:	77 20       	and	r7, r7
 da2:	b1 f7       	brne	.-20     	; 0xd90 <vfprintf+0x376>
 da4:	05 c0       	rjmp	.+10     	; 0xdb0 <vfprintf+0x396>
 da6:	80 e2       	ldi	r24, 0x20	; 32
 da8:	90 e0       	ldi	r25, 0x00	; 0
 daa:	b6 01       	movw	r22, r12
 dac:	24 d0       	rcall	.+72     	; 0xdf6 <fputc>
 dae:	fa 94       	dec	r15
 db0:	ff 20       	and	r15, r15
 db2:	c9 f7       	brne	.-14     	; 0xda6 <vfprintf+0x38c>
 db4:	44 ce       	rjmp	.-888    	; 0xa3e <vfprintf+0x24>
 db6:	f6 01       	movw	r30, r12
 db8:	26 81       	ldd	r18, Z+6	; 0x06
 dba:	37 81       	ldd	r19, Z+7	; 0x07
 dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <vfprintf+0x3a8>
 dbe:	2f ef       	ldi	r18, 0xFF	; 255
 dc0:	3f ef       	ldi	r19, 0xFF	; 255
 dc2:	c9 01       	movw	r24, r18
 dc4:	2c 96       	adiw	r28, 0x0c	; 12
 dc6:	e2 e1       	ldi	r30, 0x12	; 18
 dc8:	bc c0       	rjmp	.+376    	; 0xf42 <__epilogue_restores__>

00000dca <strnlen_P>:
 dca:	fc 01       	movw	r30, r24
 dcc:	05 90       	lpm	r0, Z+
 dce:	61 50       	subi	r22, 0x01	; 1
 dd0:	70 40       	sbci	r23, 0x00	; 0
 dd2:	01 10       	cpse	r0, r1
 dd4:	d8 f7       	brcc	.-10     	; 0xdcc <strnlen_P+0x2>
 dd6:	80 95       	com	r24
 dd8:	90 95       	com	r25
 dda:	8e 0f       	add	r24, r30
 ddc:	9f 1f       	adc	r25, r31
 dde:	08 95       	ret

00000de0 <strnlen>:
 de0:	fc 01       	movw	r30, r24
 de2:	61 50       	subi	r22, 0x01	; 1
 de4:	70 40       	sbci	r23, 0x00	; 0
 de6:	01 90       	ld	r0, Z+
 de8:	01 10       	cpse	r0, r1
 dea:	d8 f7       	brcc	.-10     	; 0xde2 <strnlen+0x2>
 dec:	80 95       	com	r24
 dee:	90 95       	com	r25
 df0:	8e 0f       	add	r24, r30
 df2:	9f 1f       	adc	r25, r31
 df4:	08 95       	ret

00000df6 <fputc>:
 df6:	0f 93       	push	r16
 df8:	1f 93       	push	r17
 dfa:	cf 93       	push	r28
 dfc:	df 93       	push	r29
 dfe:	8c 01       	movw	r16, r24
 e00:	eb 01       	movw	r28, r22
 e02:	8b 81       	ldd	r24, Y+3	; 0x03
 e04:	81 ff       	sbrs	r24, 1
 e06:	1b c0       	rjmp	.+54     	; 0xe3e <fputc+0x48>
 e08:	82 ff       	sbrs	r24, 2
 e0a:	0d c0       	rjmp	.+26     	; 0xe26 <fputc+0x30>
 e0c:	2e 81       	ldd	r18, Y+6	; 0x06
 e0e:	3f 81       	ldd	r19, Y+7	; 0x07
 e10:	8c 81       	ldd	r24, Y+4	; 0x04
 e12:	9d 81       	ldd	r25, Y+5	; 0x05
 e14:	28 17       	cp	r18, r24
 e16:	39 07       	cpc	r19, r25
 e18:	64 f4       	brge	.+24     	; 0xe32 <fputc+0x3c>
 e1a:	e8 81       	ld	r30, Y
 e1c:	f9 81       	ldd	r31, Y+1	; 0x01
 e1e:	01 93       	st	Z+, r16
 e20:	f9 83       	std	Y+1, r31	; 0x01
 e22:	e8 83       	st	Y, r30
 e24:	06 c0       	rjmp	.+12     	; 0xe32 <fputc+0x3c>
 e26:	e8 85       	ldd	r30, Y+8	; 0x08
 e28:	f9 85       	ldd	r31, Y+9	; 0x09
 e2a:	80 2f       	mov	r24, r16
 e2c:	09 95       	icall
 e2e:	00 97       	sbiw	r24, 0x00	; 0
 e30:	31 f4       	brne	.+12     	; 0xe3e <fputc+0x48>
 e32:	8e 81       	ldd	r24, Y+6	; 0x06
 e34:	9f 81       	ldd	r25, Y+7	; 0x07
 e36:	01 96       	adiw	r24, 0x01	; 1
 e38:	9f 83       	std	Y+7, r25	; 0x07
 e3a:	8e 83       	std	Y+6, r24	; 0x06
 e3c:	02 c0       	rjmp	.+4      	; 0xe42 <fputc+0x4c>
 e3e:	0f ef       	ldi	r16, 0xFF	; 255
 e40:	1f ef       	ldi	r17, 0xFF	; 255
 e42:	c8 01       	movw	r24, r16
 e44:	df 91       	pop	r29
 e46:	cf 91       	pop	r28
 e48:	1f 91       	pop	r17
 e4a:	0f 91       	pop	r16
 e4c:	08 95       	ret

00000e4e <__ultoa_invert>:
 e4e:	fa 01       	movw	r30, r20
 e50:	aa 27       	eor	r26, r26
 e52:	28 30       	cpi	r18, 0x08	; 8
 e54:	51 f1       	breq	.+84     	; 0xeaa <__ultoa_invert+0x5c>
 e56:	20 31       	cpi	r18, 0x10	; 16
 e58:	81 f1       	breq	.+96     	; 0xeba <__ultoa_invert+0x6c>
 e5a:	e8 94       	clt
 e5c:	6f 93       	push	r22
 e5e:	6e 7f       	andi	r22, 0xFE	; 254
 e60:	6e 5f       	subi	r22, 0xFE	; 254
 e62:	7f 4f       	sbci	r23, 0xFF	; 255
 e64:	8f 4f       	sbci	r24, 0xFF	; 255
 e66:	9f 4f       	sbci	r25, 0xFF	; 255
 e68:	af 4f       	sbci	r26, 0xFF	; 255
 e6a:	b1 e0       	ldi	r27, 0x01	; 1
 e6c:	3e d0       	rcall	.+124    	; 0xeea <__ultoa_invert+0x9c>
 e6e:	b4 e0       	ldi	r27, 0x04	; 4
 e70:	3c d0       	rcall	.+120    	; 0xeea <__ultoa_invert+0x9c>
 e72:	67 0f       	add	r22, r23
 e74:	78 1f       	adc	r23, r24
 e76:	89 1f       	adc	r24, r25
 e78:	9a 1f       	adc	r25, r26
 e7a:	a1 1d       	adc	r26, r1
 e7c:	68 0f       	add	r22, r24
 e7e:	79 1f       	adc	r23, r25
 e80:	8a 1f       	adc	r24, r26
 e82:	91 1d       	adc	r25, r1
 e84:	a1 1d       	adc	r26, r1
 e86:	6a 0f       	add	r22, r26
 e88:	71 1d       	adc	r23, r1
 e8a:	81 1d       	adc	r24, r1
 e8c:	91 1d       	adc	r25, r1
 e8e:	a1 1d       	adc	r26, r1
 e90:	20 d0       	rcall	.+64     	; 0xed2 <__ultoa_invert+0x84>
 e92:	09 f4       	brne	.+2      	; 0xe96 <__ultoa_invert+0x48>
 e94:	68 94       	set
 e96:	3f 91       	pop	r19
 e98:	2a e0       	ldi	r18, 0x0A	; 10
 e9a:	26 9f       	mul	r18, r22
 e9c:	11 24       	eor	r1, r1
 e9e:	30 19       	sub	r19, r0
 ea0:	30 5d       	subi	r19, 0xD0	; 208
 ea2:	31 93       	st	Z+, r19
 ea4:	de f6       	brtc	.-74     	; 0xe5c <__ultoa_invert+0xe>
 ea6:	cf 01       	movw	r24, r30
 ea8:	08 95       	ret
 eaa:	46 2f       	mov	r20, r22
 eac:	47 70       	andi	r20, 0x07	; 7
 eae:	40 5d       	subi	r20, 0xD0	; 208
 eb0:	41 93       	st	Z+, r20
 eb2:	b3 e0       	ldi	r27, 0x03	; 3
 eb4:	0f d0       	rcall	.+30     	; 0xed4 <__ultoa_invert+0x86>
 eb6:	c9 f7       	brne	.-14     	; 0xeaa <__ultoa_invert+0x5c>
 eb8:	f6 cf       	rjmp	.-20     	; 0xea6 <__ultoa_invert+0x58>
 eba:	46 2f       	mov	r20, r22
 ebc:	4f 70       	andi	r20, 0x0F	; 15
 ebe:	40 5d       	subi	r20, 0xD0	; 208
 ec0:	4a 33       	cpi	r20, 0x3A	; 58
 ec2:	18 f0       	brcs	.+6      	; 0xeca <__ultoa_invert+0x7c>
 ec4:	49 5d       	subi	r20, 0xD9	; 217
 ec6:	31 fd       	sbrc	r19, 1
 ec8:	40 52       	subi	r20, 0x20	; 32
 eca:	41 93       	st	Z+, r20
 ecc:	02 d0       	rcall	.+4      	; 0xed2 <__ultoa_invert+0x84>
 ece:	a9 f7       	brne	.-22     	; 0xeba <__ultoa_invert+0x6c>
 ed0:	ea cf       	rjmp	.-44     	; 0xea6 <__ultoa_invert+0x58>
 ed2:	b4 e0       	ldi	r27, 0x04	; 4
 ed4:	a6 95       	lsr	r26
 ed6:	97 95       	ror	r25
 ed8:	87 95       	ror	r24
 eda:	77 95       	ror	r23
 edc:	67 95       	ror	r22
 ede:	ba 95       	dec	r27
 ee0:	c9 f7       	brne	.-14     	; 0xed4 <__ultoa_invert+0x86>
 ee2:	00 97       	sbiw	r24, 0x00	; 0
 ee4:	61 05       	cpc	r22, r1
 ee6:	71 05       	cpc	r23, r1
 ee8:	08 95       	ret
 eea:	9b 01       	movw	r18, r22
 eec:	ac 01       	movw	r20, r24
 eee:	0a 2e       	mov	r0, r26
 ef0:	06 94       	lsr	r0
 ef2:	57 95       	ror	r21
 ef4:	47 95       	ror	r20
 ef6:	37 95       	ror	r19
 ef8:	27 95       	ror	r18
 efa:	ba 95       	dec	r27
 efc:	c9 f7       	brne	.-14     	; 0xef0 <__ultoa_invert+0xa2>
 efe:	62 0f       	add	r22, r18
 f00:	73 1f       	adc	r23, r19
 f02:	84 1f       	adc	r24, r20
 f04:	95 1f       	adc	r25, r21
 f06:	a0 1d       	adc	r26, r0
 f08:	08 95       	ret

00000f0a <__prologue_saves__>:
 f0a:	2f 92       	push	r2
 f0c:	3f 92       	push	r3
 f0e:	4f 92       	push	r4
 f10:	5f 92       	push	r5
 f12:	6f 92       	push	r6
 f14:	7f 92       	push	r7
 f16:	8f 92       	push	r8
 f18:	9f 92       	push	r9
 f1a:	af 92       	push	r10
 f1c:	bf 92       	push	r11
 f1e:	cf 92       	push	r12
 f20:	df 92       	push	r13
 f22:	ef 92       	push	r14
 f24:	ff 92       	push	r15
 f26:	0f 93       	push	r16
 f28:	1f 93       	push	r17
 f2a:	cf 93       	push	r28
 f2c:	df 93       	push	r29
 f2e:	cd b7       	in	r28, 0x3d	; 61
 f30:	de b7       	in	r29, 0x3e	; 62
 f32:	ca 1b       	sub	r28, r26
 f34:	db 0b       	sbc	r29, r27
 f36:	0f b6       	in	r0, 0x3f	; 63
 f38:	f8 94       	cli
 f3a:	de bf       	out	0x3e, r29	; 62
 f3c:	0f be       	out	0x3f, r0	; 63
 f3e:	cd bf       	out	0x3d, r28	; 61
 f40:	09 94       	ijmp

00000f42 <__epilogue_restores__>:
 f42:	2a 88       	ldd	r2, Y+18	; 0x12
 f44:	39 88       	ldd	r3, Y+17	; 0x11
 f46:	48 88       	ldd	r4, Y+16	; 0x10
 f48:	5f 84       	ldd	r5, Y+15	; 0x0f
 f4a:	6e 84       	ldd	r6, Y+14	; 0x0e
 f4c:	7d 84       	ldd	r7, Y+13	; 0x0d
 f4e:	8c 84       	ldd	r8, Y+12	; 0x0c
 f50:	9b 84       	ldd	r9, Y+11	; 0x0b
 f52:	aa 84       	ldd	r10, Y+10	; 0x0a
 f54:	b9 84       	ldd	r11, Y+9	; 0x09
 f56:	c8 84       	ldd	r12, Y+8	; 0x08
 f58:	df 80       	ldd	r13, Y+7	; 0x07
 f5a:	ee 80       	ldd	r14, Y+6	; 0x06
 f5c:	fd 80       	ldd	r15, Y+5	; 0x05
 f5e:	0c 81       	ldd	r16, Y+4	; 0x04
 f60:	1b 81       	ldd	r17, Y+3	; 0x03
 f62:	aa 81       	ldd	r26, Y+2	; 0x02
 f64:	b9 81       	ldd	r27, Y+1	; 0x01
 f66:	ce 0f       	add	r28, r30
 f68:	d1 1d       	adc	r29, r1
 f6a:	0f b6       	in	r0, 0x3f	; 63
 f6c:	f8 94       	cli
 f6e:	de bf       	out	0x3e, r29	; 62
 f70:	0f be       	out	0x3f, r0	; 63
 f72:	cd bf       	out	0x3d, r28	; 61
 f74:	ed 01       	movw	r28, r26
 f76:	08 95       	ret

00000f78 <_exit>:
 f78:	f8 94       	cli

00000f7a <__stop_program>:
 f7a:	ff cf       	rjmp	.-2      	; 0xf7a <__stop_program>
